---
title: "2.4 PRNT50"
format: html
editor: visual
author: J.Chen (let me know if you run into any troubles with those codes)
---

## Quarto

This qmd file including the codes we utilized for estimating the proportion of the population having Ab titer high enough to protect them from possible future infections. The estimation is based on quant anti-S assay results (CBS-Roche-S and APL-Abbott-S-RBD) and the corresponding Ab cutoff related to PRNT50 (1:118).

## Running Code

## Load dataset

```{r}
# The CBS Data, extracted using "CITF_CBS_desc_stats.Rmd"

load(file = "../1_data/private/CBS.RData") # original CBS
load(file = "../1_data/private/CBSs.RData") # a clean subset of CBS
# Notes: Y.Yuan confirmed on 01-May-2024 the ver 2023-11-30 of CBS is no longer the last ver. The most recent CBS data has 2023 data included but it's not adding new info to our project so we are still using the 2023-11-30 ver of CBS.

# APL Data
load(file = "../1_data/private/APLs.RData") # a clean subset
# Updated APL v2 data (ID cleaned and encrypted)
load(file = "../1_data/private/RFD4682_ev2.RData")
```

## Load necessary paks

```{r}
library(dplyr)         # Data management
library(reshape2)      # for melt() function
library(ggplot2)       # ggplot
library(zoo)           # for year-month format
```

## 1. Clean the APL data

#### 1.1 Use the APLs created, add anti-S assay results and interp

```{r}
APLs<-merge(APLs, select(RFD4682_ev2, order_ID, 
                   `RBD-IgGII_RESULT`, `RBD-IgGII_INTERP`,
                   `RBD-IgGII_RESULT_DATE`,
                   VACCINATION_STATUS,
                   ), by="order_ID",all.x=T, all.y=F)

# Remove duplicated records (N=4)
APLs<-APLs %>%
  filter(order_ID %in% RFD4682_ev2$order_ID) %>%
  rename(abbott_s = `RBD-IgGII_RESULT`,
         pos_abbott_s = `RBD-IgGII_INTERP`,
         date_abbott_s = `RBD-IgGII_RESULT_DATE`,
         vax = VACCINATION_STATUS)
APLs$month_abbott_s<-as.yearmon(APLs$date_abbott_s)

# check the COI
summary(APLs[APLs$pos_abbott_s=="Positive",]$abbott_s)
# 50 - 800000 the COI = 50 good
summary(APLs[APLs$pos_abbott_s=="Negative",]$abbott_s)
# 0-49, COI = 50 good
```

**Notes**: So no matter what it really is it can't be Abbott-S-RBD and shall not be included in anti-S analysis. Updates on May 28th: Carmen replied and confirmed they are misplaced anti-N assay results. APL data has been cleaned and uploaded to the server to share with Yuan and Matthew.

## 2. Applying the COI

#### 2.1 Apply COI to APL (Abbott-S) data

```{r}
APLs$pos_abbott_s2<-rep(NA, 214776)
APLs$pos_abbott_s2[APLs$abbott_s>=402.36 & !is.na(APLs$abbott_s)]<-"Positive"
APLs$pos_abbott_s2[APLs$abbott_s<402.36 & !is.na(APLs$abbott_s)]<-"Negative"
table(APLs$pos_abbott_s2, useNA = 'ifany')

table(APLs$pos_abbott_s, APLs$pos_abbott_s2, useNA = 'ifany')
```

### Apply COI to CBS (Roche-S) data

```{r}
CBS<-arrange(CBS, pid)
CBSs<-arrange(CBSs, pid)
CBSs$pos_roche_s<-CBS$interp_roche_s
CBSs_AB<-CBSs[CBSs$province=="AB",]

# CBS used Roche-S, one ob has missing values
table(is.na(CBSs_AB$roche_s))

# Roche COI: 0.8 & 178.81
CBSs_AB$pos_roche_s2<-rep(NA, 124008)
CBSs_AB$pos_roche_s2[CBSs_AB$roche_s>=178.81 & !is.na(CBSs_AB$roche_s)]<-1
CBSs_AB$pos_roche_s2[CBSs_AB$roche_s< 178.81 & !is.na(CBSs_AB$roche_s)]<-0
table(CBSs_AB$pos_roche_s2, useNA = 'ifany')

# Comparison btw COI 0.8 & 178.81
table(CBSs_AB$pos_roche_s, CBSs_AB$pos_roche_s2, useNA = 'ifany')
```

```{r}
# Save the modified CBSs, APLs, and CBSs_AB data
save(APLs, file = "../1_data/private/APLs.RData")
save(CBSs, file = "../1_data/private/CBSs.RData")
save(CBSs_AB, file = "../1_data/private/CBSs_AB.RData")
```


**Notes:** After increasing the COI from 0.8 to 178.81, 6732 of 108,514 (6.20%) samples were re-categorized as negative. The gap is smaller than what we observed in APL data, which has gaps of around 10%.

#### 2.2 Roche-S --> Abbott-S transformation
This part is skipped and not mentioned in the manuscript.

#### 2.2.1 Apply Transformation

```{r}
# Abbott-S = 82.5 + 15.54*Roche-S
# Source: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8552734/

# APL
APLs$roche_st<-(APLs$abbott_s-82.5)/15.54
summary(APLs$roche_st)

## add positivity, COI=0.8
APLs$pos_roche_st<-rep(NA, 214780)
APLs$pos_roche_st[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                   APLs$roche_st>=0.8 & !is.na(APLs$roche_st)]<-1
APLs$pos_roche_st[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                     APLs$roche_st<0.8 & !is.na(APLs$roche_st)]<-0
table(APLs$pos_roche_st, useNA = 'ifany')

## add immunity, COI = 178.81
APLs$pos_roche_st2<-rep(NA, 214780)
APLs$pos_roche_st2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                   APLs$roche_st>=178.81 & !is.na(APLs$roche_st)]<-1
APLs$pos_roche_st2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                     APLs$roche_st<178.81 & !is.na(APLs$roche_st)]<-0
table(APLs$pos_roche_st, APLs$pos_roche_st2, useNA = 'ifany')
```

```{r}
# CBS
CBSs_AB$abbott_st<-82.5+CBSs_AB$roche_s*15.54
summary(CBSs_AB$abbott_st)

## add positivity, COI=50, all positive (COI lower than min after transformation)
CBSs_AB$pos_abbott_st<-rep(NA, 124008)
CBSs_AB$pos_abbott_st[CBSs_AB$abbott_st>=50 & !is.na(CBSs_AB$abbott_st)]<-1
CBSs_AB$pos_abbott_st[CBSs_AB$abbott_st<50 & !is.na(CBSs_AB$abbott_st)]<-0
table(CBSs_AB$pos_abbott_st, useNA = 'ifany')

## add immunity, COI = 178.81
CBSs_AB$pos_abbott_st2<-rep(NA, 124008)
CBSs_AB$pos_abbott_st2[CBSs_AB$abbott_st>=402.36 & !is.na(CBSs_AB$abbott_st)]<-1
CBSs_AB$pos_abbott_st2[CBSs_AB$abbott_st<402.36 & !is.na(CBSs_AB$abbott_st)]<-0
table(CBSs_AB$pos_abbott_st, CBSs_AB$pos_abbott_st2, useNA = 'ifany')
```

#### 2.2.2 Creating merged dta

```{r}
tb_abbst<-APLs %>%
  .[.$abb_s_AU==1,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_roche_st= sum(pos_roche_st, na.rm = T), 
            pos_roche_st2= sum(pos_roche_st2, na.rm = T)
            )
tb_abbst$prop.rost1<-tb_abbst$pos_roche_st/tb_abbst$n
tb_abbst$prop.rost2<-tb_abbst$pos_roche_st2/tb_abbst$n

# merge abbs & abbst table
tb_abbs<-merge(tb_abbs, select(tb_abbst, -c(2:4)), all=T, by="samplemonth")

# clean NAs
tb_abbs<-tb_abbs[!is.na(tb_abbs$samplemonth),]

tb_melt_t1<-reshape2::melt(select(tb_abbs, samplemonth, prop.abbs1, prop.rost1, study), 
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")

tb_melt_t2<-reshape2::melt(select(tb_abbs, samplemonth, prop.abbs2, prop.rost2, study), 
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
```

```{r}
tb_rost<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_st= sum(pos_abbott_st, na.rm = T), 
            pos_abbott_st2= sum(pos_abbott_st2, na.rm = T)
            )
tb_rost$prop.abbst1<-tb_rost$pos_abbott_st/tb_rost$n
tb_rost$prop.abbst2<-tb_rost$pos_abbott_st2/tb_rost$n

# merge abbs & abbst table
tb_ros<-merge(tb_ros, select(tb_rost, -c(2:4)), all=T, by="samplemonth")

# clean NAs
tb_ros<-tb_ros[!is.na(tb_ros$samplemonth),]

tb_melt_t3<-reshape2::melt(select(tb_ros, samplemonth, prop.ros1, prop.abbst1, study),
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
tb_melt_t4<-reshape2::melt(select(tb_ros, samplemonth, prop.ros2, prop.abbst2, study),
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
```


## 3. Making the Plot

## 3.1.1 Prepare the melt data: APL

```{r}
# recode pos/neg
APLs$pos_abbott_s[APLs$pos_abbott_s=="Positive"]<-1
APLs$pos_abbott_s[APLs$pos_abbott_s=="Negative"]<-0
APLs$pos_abbott_s<-as.numeric(APLs$pos_abbott_s)
APLs$pos_abbott_s2[APLs$pos_abbott_s2=="Positive"]<-1
APLs$pos_abbott_s2[APLs$pos_abbott_s2=="Negative"]<-0
APLs$pos_abbott_s2<-as.numeric(APLs$pos_abbott_s2)

APLs$pos_abbott_s_na<-is.na(APLs$pos_abbott_s)
tb_abbs<-APLs %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_na_s = sum(pos_abbott_s_na, na.rm = T),
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbs$prop.abbs1<-tb_abbs$pos_abbott_s/(tb_abbs$n-tb_abbs$n_na_s)
tb_abbs$prop.abbs2<-tb_abbs$pos_abbott_s2/(tb_abbs$n-tb_abbs$n_na_s)
tb_abbs$prop.abbs1[1:9]<-rep("NA",9)
tb_abbs$prop.abbs2[1:9]<-rep("NA",9)

# clean NAs
tb_abbs<-tb_abbs[!is.na(tb_abbs$samplemonth),]

tb_abbs_melt<-reshape2::melt(select(tb_abbs, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

## 3.1.2 Prepare the melt data: CBS

```{r}
tb_ros<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_roche_s= sum(pos_roche_s, na.rm = T), 
            pos_roche_s2= sum(pos_roche_s2, na.rm = T)
            )
tb_ros$prop.ros1<-tb_ros$pos_roche_s/tb_ros$n
tb_ros$prop.ros2<-tb_ros$pos_roche_s2/tb_ros$n

tb_ros_melt<-reshape2::melt(select(tb_ros, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

## 3.2 Making the Plot

#### 3.2.1 Making the plot seperately for CBS & APL

```{r}
# APL
p09<-tb_abbs_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(colour=COI))  +
  theme_bw() 
p09

# CBS
p09b<-tb_ros_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(colour=COI))  +
  theme_bw() 
p09b
```

#### 3.2.2 Making APL & CBS in one plot

```{r}
# creating merged summary tab
tb_abbs_melt$study<-rep("APL", length(tb_abbs_melt$samplemonth))
tb_ros_melt$study<-rep("CBS", length(tb_ros_melt$samplemonth))

tb_APLCBS2<-rbind.data.frame(tb_abbs_melt, tb_ros_melt)
rm(tb_abbs, tb_abbs_melt, tb_ros, tb_ros_melt)

tb_APLCBS2$COI<-as.character(tb_APLCBS2$COI)
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.abbs1"]<-"50"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.abbs2"]<-"402.36"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.ros1"]<-"0.8"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.ros2"]<-"178.81"

tb_APLCBS2$COI_ty[tb_APLCBS2$COI %in% c("50", "0.8")]<-"Positivity"
tb_APLCBS2$COI_ty[tb_APLCBS2$COI %in% c("402.36", "178.81")]<-"Immunity"
```

```{r}
# ggplot
p09.lab<-c("APL (PRNT-50 cutoff)", "CBS (PRNT-50 cutoff)", 
           "APL (manufacturer cutoff)", "CBS (manufacturer cutoff)")
p09c<-tb_APLCBS2 %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09.lab)+
  scale_linetype_manual("", values=c(3,3,1,1), labels = p09.lab)+
  ggtitle("Unstratified")
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09c
```

#### 3.2.3 Plot for transformed curved

```{r}
# Plot 1
p09d.dta<-rbind.data.frame(tb_melt_t1, tb_melt_t3)

p09d.dta$COI<-as.character(p09d.dta$COI)
p09d.dta$COI_ty[p09d.dta$COI %in% c("prop.abbs1", "prop.ros1")]<-"Raw"
p09d.dta$COI_ty[p09d.dta$COI %in% c("prop.abbst1", "prop.rost1")]<-"Transformed"

p09d.lab<-c("APL-Abbott (COI=50)", "CBS-Roche (COI=0.8)", 
           "APL-Roche (COI=0.8)", "CBS-Abbott (COI=50)")
p09d<-p09d.dta %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09d.lab)+
  scale_linetype_manual("", values=c(1,1,3,3), labels = p09d.lab) 
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09d
```

```{r}
# Plot 2
p09e.dta<-rbind.data.frame(tb_melt_t2, tb_melt_t4)

p09e.dta$COI<-as.character(p09e.dta$COI)
p09e.dta$COI_ty[p09e.dta$COI %in% c("prop.abbs2", "prop.ros2")]<-"Raw"
p09e.dta$COI_ty[p09e.dta$COI %in% c("prop.abbst2", "prop.rost2")]<-"Transformed"

p09e.lab<-c("APL-Abbott (COI=402)", "CBS-Roche (COI=179)", 
           "APL-Roche (COI=179)", "CBS-Abbott (COI=402)")
p09e<-p09e.dta %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09e.lab)+
  scale_linetype_manual("", values=c(1,1,3,3), labels = p09e.lab) 
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09e
```

## 4 Misc Analysis

#### 4.1 Sensitivity Analysis

```{r}
# Add vax variable
APLs<-merge(APLs, select(RFD4682_ev2, order_ID, VACCINATION_STATUS),
      by="order_ID", all=T)

APLs$vax<-APLs$VACCINATION_STATUS
APLs<-select(APLs, -c("VACCINATION_STATUS"))
table(APLs$vax, useNA = 'ifany')

# Add days since imm (vax)
APLs<-merge(APLs, select(RFD4682_ev2, order_ID, DAYS_SINCE_IMM),
      by="order_ID", all=T)
```

**Notes:** In this part we also do the analysis for those got vaccinated \>=28 days, however it does not change the shape of the lines so much. So we just group by doses (0/\>=1).

```{r}
# re-do the melt data: no vax 
tb_abbsv0<-APLs %>%
  .[.$vax %in% c("Not Immunized", "Pre-Immunization"),] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsv0$prop.abbs1<-tb_abbsv0$pos_abbott_s/tb_abbsv0$n
tb_abbsv0$prop.abbs2<-tb_abbsv0$pos_abbott_s2/tb_abbsv0$n

# clean NAs
tb_abbsv0<-tb_abbsv0[!is.na(tb_abbsv0$samplemonth),]
tb_abbsv0<-tb_abbsv0[!tb_abbsv0$pos_abbott_s==0,]

tb_abbsv0_melt<-reshape2::melt(select(tb_abbsv0, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

# re-do the melt data: 1 dose only
tb_abbsv1<-APLs %>%
  .[.$vax %in% c("1 Dose") ,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsv1$prop.abbs1<-tb_abbsv1$pos_abbott_s/tb_abbsv1$n
tb_abbsv1$prop.abbs2<-tb_abbsv1$pos_abbott_s2/tb_abbsv1$n

# clean NAs
tb_abbsv1<-tb_abbsv1[!is.na(tb_abbsv1$samplemonth),]

tb_abbsv1_melt<-reshape2::melt(select(tb_abbsv1, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

# re-do the melt data: 2 doses +
tb_abbsv2<-APLs %>%
  .[.$vax %in% c("1-2 Doses", "2 Doses", "3 Doses", "4 Doses") ,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsv2$prop.abbs1<-tb_abbsv2$pos_abbott_s/tb_abbsv2$n
tb_abbsv2$prop.abbs2<-tb_abbsv2$pos_abbott_s2/tb_abbsv2$n

# clean NAs
tb_abbsv2<-tb_abbsv2[!is.na(tb_abbsv2$samplemonth),]

tb_abbsv2_melt<-reshape2::melt(select(tb_abbsv2, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

```{r}
# re-do the plot
# APL: not vaccinated
p09v0<-tb_abbsv0_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="red") +
  geom_line(aes(linetype=COI), colour="red")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top') + 
  ggtitle("Stratum: not vaccinated or 1 dose only")
p09v0
```

```{r}
# Plot: 1 dose only
p09v1<-tb_abbsv1_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="red") +
  geom_line(aes(linetype=COI), colour="red")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top')+
  ggtitle("Stratum: 1 dose only")
p09v1
```

```{r}
# Plot: 2 doses +
p09v2<-tb_abbsv2_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="red") +
  geom_line(aes(linetype=COI), colour="red")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top')+
  ggtitle("Stratum: 2 doses +")
p09v2
```

##### Is 1-doser the cause of the "peak" and "bucket"?

#### Add time indicator to the figure

```{r}
# time when vax is available to Alberta health care workers and first responders
# Jan: medical workers
# Feb: Phase-1: age 75+
# Mar: Phase-2: group A
# Apr: Phase-2: group B, C
# May: Phase-3: age 12+

p09v1 + 
  geom_vline(xintercept = as.yearmon(c("2021-01", "2021-02", "2021-03",
                                       "2021-04", "2021-05"))
             , linetype="dotted", size = 1.0, color="grey") +
  geom_text(aes(x=as.yearmon("Jan 2021"), label="\nHealth Care Workers", y=0.25), 
            colour="navy", angle=90)+
  geom_text(aes(x=as.yearmon("Feb 2021"), label="\nPhase1: aged 75+", y=0.25), 
            colour="navy", angle=90)+
  geom_text(aes(x=as.yearmon("Mar 2021"), label="\nPhase2A: aged 65+", y=0.25), 
            colour="navy", angle=90)+
  geom_text(aes(x=as.yearmon("Apr 2021"), label="\nPhase2B, 2C: aged 18+ with risks", y=0.40), 
            colour="navy", angle=90)+
  geom_text(aes(x=as.yearmon("May 2021"), label="\nPhase3: aged 12+", y=0.25), 
            colour="navy", angle=90)
```


## 4.2 The vaccination rate among APL

The APL data Carmen shared with us has vaccination info, the 2024 Jan ver of it even has the vax brand. While the CBS data we have no vax info. However, a paper written by Sheila has the vax% of those in CBS data, which we can use for comparison on vax%.

#### 4.2.1 Vax rate by APL vax data

```{r}
# create vax% cat var
APLs$vax_cat<-rep(NA, length(APLs$order_ID))
APLs$vax_cat[APLs$vax %in% c("1 Dose","1-2 Doses","2 Doses","3 Doses",
                             "4 Doses")]<-1
APLs$vax_cat[APLs$vax %in% c("Not Immunized", "Pre-Immunization")]<-0
table(APLs$vax, APLs$vax_cat, useNA = 'ifany')
```

```{r}
# create merged data
tb_vax<-APLs %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_vax= sum(vax_cat, na.rm = T)
            )
tb_vax$prop.vax<-tb_vax$n_vax/tb_vax$n

# clean NAs
tb_vax<-tb_vax[!is.na(tb_vax$samplemonth),]

# make the plot
p10<-tb_vax %>%
  ggplot(aes(x=samplemonth, y=prop.vax)) +
  geom_point() +
  geom_line()  +
  geom_smooth(colour="red") +
  theme_bw() + 
  ylim(c(0,1)) +
  ylab("Vaccinated%")
p10
```

**Alton's comments:** "It might be worth comparing to reported vax rate for Alberta similar to what Sheila and Steve did in that figure." As they used (S+ N-)% to estimate the vax%, it will inevitably results in underestimation, as those who are vaccinated and infected was not counted. An alternative solution is to estimate vax% using (S+ N-) by (N-), assuming vaccination is not related to anti N positivity (which is probably not true and we can cross-verify using our own data).

#### 4.2.2 Vax by anti-S and anti-N

```{r}
# create an addition indicator for S+ and N-
table(APLs$pos_abbott, APLs$pos_abbott_s, useNA = 'ifany')

APLs$vax_est<-rep(0, length(APLs$order_ID))
APLs$vax_est[APLs$pos_abbott==0 & APLs$pos_abbott_s==1]<-1
APLs$vax_est[is.na(APLs$pos_abbott) | is.na(APLs$pos_abbott_s)]<-NA
table(APLs$vax_est)
```

```{r}
# Modify APLs data, add na indicator, N=69108
table(APLs$pos_abbott, useNA = "ifany")
APLs$pos_abbott_na <- is.na(APLs$pos_abbott)
table(APLs$pos_abbott, APLs$pos_abbott_na, useNA = 'ifany')

tb_vax_est<-APLs %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_pos = sum(pos_abbott, na.rm = T),
            n_na = sum(pos_abbott_na, na.rm=T),
            n_vax= sum(vax_est, na.rm = T)
            )
tb_vax_est$n_neg = tb_vax_est$n - tb_vax_est$n_pos - tb_vax_est$n_na
tb_vax_est$prop.vax<-tb_vax_est$n_vax/tb_vax_est$n_neg

# clean NAs
tb_vax_est$prop.vax[1:17]<-rep(NA, 17)
tb_vax_est<-tb_vax_est[!is.na(tb_vax_est$samplemonth),]

# make the plot
p11<-tb_vax_est %>%
  ggplot(aes(x=samplemonth, y=prop.vax)) +
  geom_point() +
  geom_line()  +
  geom_smooth(colour="red") +
  theme_bw() + 
  ylim(c(0,1)) +
  ylab("Vaccinated% Est by anti-S&N")
p11
```

**Notes:** Estimating the vax% using the anti-S (+) and anti-N (-) assay results. For our analysis, this way of estimation might be problematic. We don't have pre-Omicron wave anti-N data in APL and the prevalence of ever infected (S+ & N+) raised sharply in 2022. This will result underestimated vax% in 2022, as presented in the fig above.

#### 4.2.3 The Vax rate in AB general population

```{r}
# load the data from Canada Statistics
vax_AB<-read.csv("https://health-infobase.canada.ca/src/data/covidLive/vaccination-coverage-map.csv")

# create AB subset and clean the data
vax_AB<-vax_AB[vax_AB$prename=="Alberta",]
vax_ABs<-vax_AB %>%
  select(week_end, numtotal_atleast1dose, proptotal_atleast1dose)
colnames(vax_ABs)<-c("weekend", "num.1dose", "prop.1dose")
vax_ABs$weekend<-as.yearmon(vax_ABs$weekend)

# calculate monthly mean prop for vax rate
tb_vax_AB<-vax_ABs %>%
  group_by(weekend) %>%
  summarise(ave.1dose = mean(prop.1dose))

tb_vax_AB<-tb_vax_AB[!is.na(tb_vax_AB$ave.1dose),]
tb_vax_AB$data<-rep("AB_general", length(tb_vax_AB$weekend))

d01<-tb_vax_AB
colnames(d01)<-c("samplemonth", "prop.vax", "data")
d01$prop.vax = d01$prop.vax/100
```

##### creating a merged data

```{r}
# Estimated vaccination rate: by anti-S + and anti-N neg
View(tb_vax_est)
d02<-select(tb_vax_est, samplemonth, prop.vax)
d02$data<-rep("S_pos_N_Neg", length(d02$samplemonth))

# Estimated vaccination rate: by anti-S only
View(tb_abbs)
d03<-select(tb_abbs, samplemonth, prop.abbs1)
colnames(d03)<-c("samplemonth", "prop.vax")
d03$data<-rep("S_pos", length(d03$samplemonth))

# Reported vax rate in APL
View(tb_vax)
d04<-select(tb_vax, c(1,4))
d04$data<-rep("APL_vax", length(d04$samplemonth))

# merge all
dta.vax<-rbind.data.frame(d01, d02, d03, d04)
rm(d01, d02, d03, d04)
dta.vax$prop.vax<-as.numeric(dta.vax$prop.vax)
```

##### Making the plot

```{r}
p12<-dta.vax %>%
  ggplot(aes(x=samplemonth, y=prop.vax, group=data, colour=data)) +
  geom_point(aes(colour=data)) +
  geom_line(aes(colour=data))  +
  theme_bw() + 
  ylim(0,1)+
  ylab("Vaccinated%") +
  scale_colour_manual("", values = c("orange", "red", "red", "purple"),
                      labels = c("AB General Pop.", "APL Vax%", 
                                 "Anti-S(+)", "Anti-S(+) N(-)")
                      )
#  scale_linetype_manual("", values=c(3,3,1,1), labels = p09.lab) 
p12
```
#### 4.2.4 Apply (S+ N-)/N- for vax% estimation

First we calculate (S+ N-)/N- among CBS samples
```{r}
table(CBSs_AB$pos_roche, CBSs_AB$pos_roche_s, useNA = 'ifany')
# good data quality, only two NAs in roche_n and roche_s

# remove two NAs
CBSs_AB<-CBSs_AB[!(is.na(CBSs_AB$pos_roche) | is.na(CBSs_AB$pos_roche_s)), ]

# add vax_est
CBSs_AB$vax_est<-rep(0, length(CBSs_AB$pid))
CBSs_AB$vax_est[CBSs_AB$pos_roche==0 & CBSs_AB$pos_roche_s==1]<-1
table(CBSs_AB$vax_est)
```

Then we calculate the vax% using S(+) and (S+ & N-)/(N-)
```{r}
tbCBS_vax_est<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_pos = sum(pos_roche, na.rm = T),
            s_pos = sum(pos_roche_s, na.rm = T),    
            n_vax= sum(vax_est, na.rm = T)
            )
tbCBS_vax_est$n_neg = tbCBS_vax_est$n - tbCBS_vax_est$n_pos
tbCBS_vax_est$prop.vax<-tbCBS_vax_est$n_vax/tbCBS_vax_est$n_neg

## add CBS data to merged data
d05<-select(tbCBS_vax_est, c(1,7))
colnames(d05)<-c("samplemonth", "prop.vax")
d05$data<-rep("CBS: S_pos_N_Neg", length(d05$samplemonth))

dta.vax<-rbind.data.frame(dta.vax, d05)
```

#### Now redo the plot
```{r}
# Add study and adjustment
dta.vax$study[dta.vax$data %in% c("AB_general")]<-"AB_general"
dta.vax$study[dta.vax$data %in% c("CBS: S_pos_N_Neg")]<-"CBS"
dta.vax$study[dta.vax$data %in% c("APL_vax", "S_pos", "S_pos_N_Neg")]<-"APL"

dta.vax$adj[dta.vax$data %in% c("AB_general", "APL_vax")]<-"raw"
dta.vax$adj[dta.vax$data %in% c("CBS: S_pos_N_Neg", "S_pos_N_Neg")]<-"S_pos_N_Neg"
dta.vax$adj[dta.vax$data %in% c("S_pos")]<-"S_pos"

p12.lab <- c("AB General Pop.", "APL Vax%", 
             "APL: Anti-S(+)", "APL: Anti-S(+) N(-)", "CBS: Anti-S(+) N(-)")
p12<-dta.vax %>%
  ggplot(aes(x=samplemonth, y=prop.vax, colour=interaction(study, adj),
                                        linetype=interaction(study, adj))) +
  geom_point() +
  geom_line()  +
  theme_bw() + 
  ylim(0,1)+
  ylab("Vaccinated%") +
  scale_colour_manual("", values = c("orange", "red", "red","purple", "blue"),
                      labels = p12.lab)+
  scale_linetype_manual("", values=c(1,1,3,3,3), labels = p12.lab) +
  theme(legend.position = c(0.8,0.25))
p12
```
#### Print p12
```{r}
png(file="../4_output/figs/Fig.S2 Vax.png", 
    width=2400, height=1440, res=300)
p12
dev.off()
```
#### 4.2.5 Figure S2 Panel B using transformed data
```{r}
# APL S+/N- N is transformed (Abbott-->Roche)

table(APLs$pos_abbott, APLs$pos_roche, useNA = 'ifany')
# if transformed into Roche, N=11501 participants will be identified as positive

table(APLs$pos_abbott_s, APLs$pos_roche, useNA = 'ifany')

# Add vax indicator using S+ and N- (transformed N Abb->Ro)
APLs$vax_est_t<-rep(0, length(APLs$order_ID))
APLs$vax_est_t[APLs$pos_roche==0 & APLs$pos_abbott_s==1]<-1
APLs$vax_est_t[is.na(APLs$pos_roche) | is.na(APLs$pos_abbott_s)]<-NA
table(APLs$vax_est_t, useNA = 'ifany')

tbNT_vax_est<-APLs %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_pos = sum(pos_roche, na.rm = T),
            s_pos = sum(pos_abbott_s, na.rm = T),    
            n_vax= sum(vax_est_t, na.rm = T)
            )
tbNT_vax_est$n_neg = tbNT_vax_est$n - tbNT_vax_est$n_pos
tbNT_vax_est$prop.vax<-tbNT_vax_est$n_vax/tbNT_vax_est$n_neg

# clean the table
tbNT_vax_est<-tbNT_vax_est[!is.na(tbNT_vax_est$samplemonth),]
tbNT_vax_est$prop.vax[tbNT_vax_est$prop.vax==0]<-NA

## add CBS data to merged data
d06<-select(tbNT_vax_est, samplemonth, prop.vax)
d06$data<-rep("S_pos_N_Neg (Anti-N Transformed)", length(d06$samplemonth))

#dta.vax<-rbind.data.frame(dta.vax, d05)
```


```{r}
# CBS S+/N- N is transformed (Roche-->Abbott)

# Add vax indicator using S+ and N- (transformed N Abb->Ro)
CBSs_AB$vax_est_t<-rep(0, length(CBSs_AB$pid))
CBSs_AB$vax_est_t[CBSs_AB$pos_abbott==0 & CBSs_AB$pos_roche_s==1]<-1
CBSs_AB$vax_est_t[is.na(CBSs_AB$pos_abbott) | is.na(CBSs_AB$pos_roche_s)]<-NA
table(CBSs_AB$vax_est_t, useNA = 'ifany')

tbCBST_vax_est<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_pos = sum(pos_abbott, na.rm = T),
            s_pos = sum(pos_roche_s, na.rm = T),    
            n_vax= sum(vax_est_t, na.rm = T)
            )
tbCBST_vax_est$n_neg = tbCBST_vax_est$n - tbCBST_vax_est$n_pos
tbCBST_vax_est$prop.vax<-tbCBST_vax_est$n_vax/tbCBST_vax_est$n_neg

## add CBS data to merged data
d07<-select(tbCBST_vax_est, samplemonth, prop.vax)
d07$data<-rep("CBS: S_pos_N_Neg (trasformed)", length(d07$samplemonth))

dta.vax.2<-rbind.data.frame(d06, d07, d02, d05)

```

```{r}
# Use figure to present data
p13.lab <- c("CBS Raw: Anti-S(+) N(-)", "CBS Transformed: Anti-S(+) N(-)", 
             "APL Raw: Anti-S(+) N(-)", "APL Transformed: Anti-S(+) N(-)")
p13<-dta.vax.2 %>%
  ggplot(aes(x=samplemonth, y=prop.vax, colour=data, linetype=data)) +
  geom_point() +
  geom_line()  +
  theme_bw() + 
  ylim(0,1)+
  ylab("Vaccinated%") +
  scale_colour_manual("", values = c("blue", "brown", "purple","green"),
                      labels = p13.lab)+
  scale_linetype_manual("", values=c(3,3,3,3), labels = p13.lab)+
  theme(legend.position = c(0.8,0.2))
p13
```
##### Print p12 and p13 together
```{r}
p1213<-plot_grid(p12 + xlab ("Time of Sample Collection") +
                 coord_cartesian(xlim=as.yearmon(c("Oct 2020", "Feb 2023")))+
                 theme(legend.position = c(0.67,0.25)), 
                 p13 + xlab ("Time of Sample Collection") + ylab("") +
                 coord_cartesian(xlim=as.yearmon(c("Oct 2020", "Feb 2023")))+
                 theme(legend.position = c(0.65,0.2)),
                 labels = c("A", "B"),
                 nrow=1,  align = "h")
p1213

png(file="../4_output/figs/Fig.S2 Vax.png", 
    width=2400, height=1200, res=300)
p1213
dev.off()
```



## 4.3 Iris's Imputation on Vax history

```{r}
load("/home/jchen/../iganser/CBS_data/temp/2024-04-16_df4_schange_new_corrected2.RData")
save(df4_schange_new_corrected2, file = "../1_data/private/CBS_vax_imputed.RData")

# beware iris is using an updated ver of CBS, there's few thousands more observations available in this ver of CBS.
CBS_vax_imputed<-df4_schange_new_corrected2
rm(df4_schange_new_corrected2)
```

#### 4.3.1 Data cleaning and merging

```{r}
# The imputed vaccination variable
table(CBS_vax_imputed$series_s, useNA = 'ifany')

# add imputed variable to CBSs data
CBSs_AB<-merge(CBSs_AB, 
      select(CBS_vax_imputed, pid, sampledate, series_s), 
             by = c("pid", "sampledate"),
      all.x = T, all.y = F)

table(CBSs_AB$series_s, useNA = 'ifany')
# N(missing) = 24393. The combination of pid and sampledate is unique in both CBS and Iris's ver of CBS. So some of the samples we are working on are not matching.

CBSs_AB$series_bin[CBSs_AB$series_s=="not vaccinated/1st only"]<-0
CBSs_AB$series_bin[CBSs_AB$series_s!="not vaccinated/1st only" & !is.na(CBSs_AB$series_s)]<-1

table(CBSs_AB$series_s, CBSs_AB$series_bin, useNA = 'ifany')
```

Iris algorithm cannot take unvaccinated and 1 dose only apart. In our case we can create a binary var \<2 doses and \>=2 doses, so we can do the same stratification with APL data.

```{r}
# re-do the melt data: no vax or 1 dose only
tb_rosv0<-CBSs_AB %>%
  .[.$series_bin == 0,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_ros= sum(pos_roche_s, na.rm = T), 
            pos_ros2= sum(pos_roche_s2, na.rm = T)
            )
tb_rosv0$prop.ros1<-tb_rosv0$pos_ros/tb_rosv0$n
tb_rosv0$prop.ros2<-tb_rosv0$pos_ros2/tb_rosv0$n

# clean NAs
tb_rosv0<-tb_rosv0[!is.na(tb_rosv0$samplemonth),]

tb_rosv0_melt<-reshape2::melt(select(tb_rosv0, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

# re-do the melt data: at least 1 dose
tb_rosv1<-CBSs_AB %>%
  .[.$series_bin == 1,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_ros= sum(pos_roche_s, na.rm = T), 
            pos_ros2= sum(pos_roche_s2, na.rm = T)
            )
tb_rosv1$prop.ros1<-tb_rosv1$pos_ros/tb_rosv1$n
tb_rosv1$prop.ros2<-tb_rosv1$pos_ros2/tb_rosv1$n

# clean NAs
tb_rosv1<-tb_rosv1[!is.na(tb_rosv1$samplemonth),]

tb_rosv1_melt<-reshape2::melt(select(tb_rosv1, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

```{r}
# re-do the plot
# APL: not vaccinated
p13v0<-tb_rosv0_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="blue") +
  geom_line(aes(linetype=COI), colour="blue")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("CBS-Roche (COI=0.8)", 
                                                      "CBS-Roche (COI=179)"))+
  theme(legend.position='top') + 
  ggtitle("Stratum: not vaccinated or 1 dose only")
p13v0
```

```{r}
# Plot: at least 1 dose
p13v1<-tb_rosv1_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="blue") +
  geom_line(aes(linetype=COI), colour="blue")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("CBS-Roche (COI=0.8)", 
                                                      "CBS-Roche (COI=179)"))+
  theme(legend.position='top')+
  ggtitle("Stratum: at least 2 doses")
p13v1
```


## 4.4 The vaccination policy and those "1-Doser"

#### 4.4.1 add prop (1-dose only)
```{r}
# number of personals in each month
tb_abbsvall<-APLs %>%
  .[!(.$vax %in% c("No_ULI")),] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsvall$n.all<-tb_abbsvall$n

tb_abbsv1<-merge(tb_abbsv1, select(tb_abbsvall, samplemonth, n.all),
      by="samplemonth", all.x = T, all.y = F)
tb_abbsv1$prop.d1<-tb_abbsv1$n/tb_abbsv1$n.all
```

#### 4.4.2 Making the plot:
```{r}
p09v1a<-tb_abbsv1 %>%
  ggplot(aes(x=samplemonth)) +
  geom_point(aes(y=prop.abbs1), colour="red") +
  geom_point(aes(y=prop.abbs2), colour="red") +
  geom_line(aes(y=prop.abbs1), colour="red")  +
  geom_line(aes(y=prop.abbs2), linetype=2, colour="red")  +
  geom_line(aes(y=prop.d1), colour="darkgrey") +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top')+
  ggtitle("Stratum: 1 dose only")
p09v1a
```

#### 4.4.3 Check the time gap btw 1st dose and 2nd dose. 
```{r}
APL_vax<-RFD4682_v2_vaxe %>%
  select(ULI, ULI_IDe, DOSE_COUNT, IMMUNIZATION_DATE) %>%
  .[.$DOSE_COUNT==1 | .$DOSE_COUNT==2, ]

APL_vax<-reshape(APL_vax[,c(2:4)], idvar="ULI_IDe", timevar = "DOSE_COUNT",
        direction = "wide")

# Calculate time gap btw 1st and 2nd dose
APL_vax$time_gap<-as.Date(APL_vax$IMMUNIZATION_DATE.2)-
                  as.Date(APL_vax$IMMUNIZATION_DATE.1)

# check distribution
hist(as.numeric(APL_vax$time_gap), breaks=25)

summary(as.numeric(APL_vax$time_gap))
```
##  4.5 Adding the proportion of each stratum

### Make the plot for three strata

#### The unvaccinated stratum
```{r}
# add proportion of the stratum into the data table
tb_abbsv0<-merge(tb_abbsv0, select(tb_abbsv1, samplemonth, n.all),
      by="samplemonth", all.x=T, all.y=F)
tb_abbsv0<-tb_abbsv0 %>%
  mutate(
    prop.stra = n/n.all
  )
p09v0.lab<-c("APL (manufacturer cutoff)", "APL (PRNT-50 cutoff)",
             "Proportion of the stratum")

tb_abbsv0_melt<-reshape2::melt(select(tb_abbsv0, -c(2:4,7)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

# making the plot
p09v0<-tb_abbsv0_melt %>%
  ggplot(aes(x=samplemonth, y=prop)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(linetype=COI, colour=COI))  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "red", "darkgrey"),
                      labels = p09v0.lab)+
  scale_linetype_manual("", values=c(1,3,3), labels = p09v0.lab) +
  theme(legend.position='top') +
  guides(color = guide_legend(nrow = 2)) +
  ggtitle("Stratum: unvaccinated")
p09v0
```

#### The 1-dose only stratum
```{r}
tb_abbsv1_melt<-reshape2::melt(select(tb_abbsv1, -c(2:4,7)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

p09v1<-tb_abbsv1_melt %>%
  ggplot(aes(x=samplemonth, y=prop)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(linetype=COI, colour=COI))  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "red", "darkgrey"),
                      labels = p09v0.lab)+
  scale_linetype_manual("", values=c(1,3,3), labels = p09v0.lab) +
  theme(legend.position='none') +
  guides(color = guide_legend(nrow = 2)) +
  ggtitle("Stratum: 1 dose only")
p09v1
```

#### The 2-dose+ stratum
```{r}
tb_abbsv2<-tb_abbsv2[-1,]

# add proportion of the stratum into the data table
tb_abbsv2<-merge(tb_abbsv2, select(tb_abbsv1, samplemonth, n.all),
      by="samplemonth", all.x=T, all.y=F)
tb_abbsv2<-tb_abbsv2 %>%
  mutate(
    prop.stra = n/n.all
  )
```

```{r}
# melt the data tab
tb_abbsv2_melt<-reshape2::melt(select(tb_abbsv2, -c(2:4,7)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

p09v2<-tb_abbsv2_melt %>%
  ggplot(aes(x=samplemonth, y=prop)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(linetype=COI, colour=COI))  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "red", "darkgrey"),
                      labels = p09v0.lab)+
  scale_linetype_manual("", values=c(1,3,3), labels = p09v0.lab) +
  theme(legend.position='none') +
  guides(color = guide_legend(nrow = 2)) +
  ggtitle("Stratum: 2 doses +")
p09v2
```

### merge all four into one figue panel
```{r}
rm(p09v0a, p09v1a, p09v2a)
```

#### Figure panel
```{r}
# use cowplot package
p09.upper<-cowplot::plot_grid(p09c + ylab("Proportion") + xlab ("") +
                           coord_cartesian(xlim=as.yearmon(c("Jan 2021", "Oct 2022"))) +
                           theme(legend.position='top') +
                           guides(color = guide_legend(nrow = 2)), 
                           p09v0 + xlab ("") + ylab(""),
                           labels = c("A", "B"),
                           nrow=1,  align = "h")

p09.lower<-cowplot::plot_grid(p09v1, p09v2 + ylab(""),
                              labels = c("C", "D"),
                              nrow=1,  align = "h")
p09all<-cowplot::plot_grid(p09.upper, p09.lower,
                              labels = c("", ""),
                              nrow=2,  align = "v", rel_heights = c(1,0.8))
p09all

png(file="../4_output/figs/Fig.4 Immunity.png", 
    width=2400, height=2000, res=300)
p09all
dev.off()
```
## 5. Additional analysis for manuscript 

####  5.1 Some desc analysis
```{r}
# median age in CBS Alberta and APL
summary(CBSs_AB$age) 
summary(APLs$age) # age=0?

APLs %>%
  .[.$age %in% c(0:17),]

# age categories
CBSs_AB$age_cat[CBSs_AB$age %in% c(16:17)]<-"<18"
CBSs_AB$age_cat[CBSs_AB$age %in% c(18:35)]<-"18-35"
CBSs_AB$age_cat[CBSs_AB$age %in% c(36:64)]<-"36-64"
CBSs_AB$age_cat[CBSs_AB$age %in% c(65:199)]<-"65+"
table(CBSs_AB$age_cat, useNA = "ifany")
prop.table(table(CBSs_AB$age_cat, useNA = "ifany"))

APLs$age_cat[APLs$age %in% c(0:17)]<-"<18"
APLs$age_cat[APLs$age %in% c(18:35)]<-"18-35"
APLs$age_cat[APLs$age %in% c(36:64)]<-"36-64"
APLs$age_cat[APLs$age %in% c(65:199)]<-"65+"
table(APLs$age_cat)
prop.table(table(APLs$age_cat))

# Sex
table(CBSs_AB$sex)
prop.table(table(CBSs_AB$sex))

table(APLs$gender)
prop.table(table(APLs$gender))
```

Among samples from our auxiliary datasets tested with both Abbott and Roche Anti-N assays, the COI was lower with Abbott than with Roche in X% of samples
```{r}
# This involves directly comparison btw Roche anti-N and Abbott-anti-N

# How many samples each?
table(dta_all$study)

# Non missing in Abbott & Roche anti-N
table(dta_all[(!is.na(dta_all$roche_n) & !is.na(dta_all$abbott_n)),]$study)
dta_nmiss<-dta_all[(!is.na(dta_all$roche_n) & !is.na(dta_all$abbott_n)),]

table(dta_nmiss$abbott_n<dta_nmiss$roche_n)
778/(778+43)
```

```{r}
#Numbers at 2022 July
tb_melt_2 %>%
  .[.$samplemonth == as.yearmon("July 2022"),]
```

#### 5.2 PCR-verified test positivity:
We did this analysis as suggested by the reviewer-1
```{r}
# How many test results are previously PCR-verified?

# CBS data (AB subset) - ver Dec 2023, this should be the same ver of CBS data we received by late Nov of 2023, the same ver of data we used for the project. No PCR test results were found.

# How many records in AB?
CBSs %>%
  filter(province=="AB") %>%  # N=124,008
  select(pid, sampledate) %>%
  unique()                    # No duplicated record, good

# APL data: check the APL data ev2, this one is uploaded to the jmy folder on the server
load("/home/jchen/../../jmy/APL/RFD4682_ev2.RData")

# N=214776, de-duplicated, good.

# Is sero-id unique (this is the sample ID)
length(unique(RFD4682_ev2$SERO_ID)) # N=214,776, good
length(unique(RFD4682_ev2$SID)) # N=213,139, duplicates, use SERO_ID

# how many has valid PCR test results?
t1<-table(RFD4682_ev2$NAAT_STATUS, useNA = 'ifany')
t1
prop.table(t1)
```

```{r}
# Unstratified test positivity 
# Abbott Anti-N
RFD4682_ev2 %>%
  filter(NAAT_STATUS == "Positive") %>%
  count(`N-IgG_INTERP`)

# Abbott Anti-S-RBD
RFD4682_ev2 %>%
  filter(NAAT_STATUS == "Positive") %>%
  count(`RBD-IgGII_INTERP`)
```
```{r}
# Stratified analysis
RFD4682_ev2$DAYS_SINCE_NAAT<-as.numeric(RFD4682_ev2$DAYS_SINCE_NAAT)
hist(RFD4682_ev2$DAYS_SINCE_NAAT)

RFD4682_ev2$NAAT_month_cat<-rep(NA, length(RFD4682_ev2$SERO_ID))
RFD4682_ev2[!is.na(RFD4682_ev2$DAYS_SINCE_NAAT) &
            0<=RFD4682_ev2$DAYS_SINCE_NAAT &
            RFD4682_ev2$DAYS_SINCE_NAAT<90,]$NAAT_month_cat<-"<3 months"
RFD4682_ev2[!is.na(RFD4682_ev2$DAYS_SINCE_NAAT) &
            90<=RFD4682_ev2$DAYS_SINCE_NAAT &
            RFD4682_ev2$DAYS_SINCE_NAAT<180,]$NAAT_month_cat<-"3-6 months"
RFD4682_ev2[!is.na(RFD4682_ev2$DAYS_SINCE_NAAT) &
            180<=RFD4682_ev2$DAYS_SINCE_NAAT &
            RFD4682_ev2$DAYS_SINCE_NAAT<360,]$NAAT_month_cat<-"6-12 months"
RFD4682_ev2[!is.na(RFD4682_ev2$DAYS_SINCE_NAAT) &
            360<=RFD4682_ev2$DAYS_SINCE_NAAT,]$NAAT_month_cat<-">12 months"
table(RFD4682_ev2$NAAT_month_cat, useNA = 'ifany')
  
RFD4682_ev2 %>%
  filter(NAAT_STATUS == "Positive") %>%
  group_by(NAAT_month_cat) %>%
  count(`N-IgG_INTERP`)
```
#### 5.3 Modify the legends and y-axis labels of figure 1
```{r}
# Check the codes in qmd script 2.3
# use key words "Fig.1" "Fig.2" to search
```





