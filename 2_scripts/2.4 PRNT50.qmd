---
title: "2.4 PRNT50"
format: html
editor: visual
author: J.Chen (let me know if you run into any troubles with those codes)
---

## Quarto

This qmd file including the codes we utilized for estimating the proportion of the population having Ab titer high enough to protect them from possible future infections. The estimation is based on quant anti-S assay results (CBS-Roche-S and APL-Abbott-S-RBD) and the corresponding Ab cutoff related to PRNT50 (1:118).

## Running Code

## Load dataset

```{r}
# The CBS Data, extracted using "CITF_CBS_desc_stats.Rmd"
load(file = "../1_data/private/CBSs.RData") # a clean subset of CBS
# Notes: Y.Yuan confirmed on 01-May-2024 the ver 2023-11-30 of CBS is no longer the last ver. The most recent CBS data has 2023 data included but it's not adding new info to our project so we are still using the 2023-11-30 ver of CBS.

# APL Data
load()
load(file = "../1_data/private/APLs.RData") # a clean subset
```

## Load necessary paks

```{r}
library(dplyr)         # Data management
#library(reshape2)      # for melt() function
library(ggplot2)       # ggplot
library(zoo)           # for year-month format
```

## 1. Clean the APL data

#### 1.1 Use the APLs created
```{r}
APLs<-merge(APLs, select(RFD4682_e, order_ID, 
                   'RBD-IgGII_RESULT', `RBD-IgGII_INTERP`,`RBD-IgGII_RESULT_DATE`
                   ), by="order_ID",all=T)
colnames(APLs)<-c(names(APLs)[1:15], "abbott_s", "pos_abbott_s", "month_abbott_s")
APLs$abb_s_index<-grepl("index", APLs$abbott_s, ignore.case = T)
APLs$abb_s_AU<-grepl("ml", APLs$abbott_s, ignore.case = T)
table(APLs$abb_s_index, APLs$abb_s_AU)
# 36 samples missing abbott_s info
APLs$abb_s_index[APLs$abb_s_index==0 & APLs$abb_s_AU==0]<-NA
APLs$abb_s_AU[is.na(APLs$abb_s_index)]<-NA

APLs$abb_s_AU<-as.numeric(APLs$abb_s_AU)
APLs$abb_s_index<-as.numeric(APLs$abb_s_index)
table(APLs$abb_s_index, APLs$abb_s_AU, useNA = 'ifany')

# remove units
APLs$abbott_s<-gsub('[a-z]', '', APLs$abbott_s)
APLs$abbott_s<-gsub('[A-Z]', '', APLs$abbott_s)
APLs$abbott_s<-gsub('[/<>]', '', APLs$abbott_s)
APLs$abbott_s<-as.numeric(APLs$abbott_s)

# check the COI
summary(APLs[APLs$abb_s_index==1 & APLs$pos_abbott_s=="Positive",]$abbott_s)
# 1.4 - 9.6 the COI is 1.4 not 1?
summary(APLs[APLs$abb_s_index==1 & APLs$pos_abbott_s=="Negative",]$abbott_s)
# 8.1 index but negative?

summary(APLs[APLs$abb_s_AU==1 & APLs$pos_abbott_s=="Positive",]$abbott_s)
# 50 - 800000 the COI = 50 good
summary(APLs[APLs$abb_s_AU==1 & APLs$pos_abbott_s=="Negative",]$abbott_s)
# 0-49, COI = 50 good

# COI for anti_n
summary(APLs[APLs$pos_abbott==1 & !is.na(APLs$abbott_n),]$abbott_n)
# 1.4 - 14.19 the COI = 1.4
summary(APLs[APLs$pos_abbott==0 & !is.na(APLs$abbott_n),]$abbott_n)
# 0.001 - 1.39

table(APLs$pos_abbott)
```
```{r}
# abbott_n misclassified as abbott_s with index?
APLs %>%
  .[is.na(.$abbott_n) & .$abb_s_index==1 & !is.na(.$abb_s_index),] # N=104946

APLs %>%
  .[is.na(.$abbott_n) & .$abb_s_AU==1 & !is.na(.$abb_s_AU),] # N=69108

APLs %>%
  .[!is.na(.$abbott_n) & .$abb_s_index==TRUE & !is.na(.$abb_s_index),] # N=0

APLs %>%
  .[!is.na(.$abbott_n) & .$abb_s_AU==1 & !is.na(.$abb_s_AU),]  # N=40690

APLs %>%
  .[!is.na(.$abbott_n) & is.na(.$abb_s_AU),]                   # N=36

table(is.na(APLs[APLs$abb_s_AU==1,]$abbott_n))

# month of data collection for those five groups:
# Group 1: "Abbott-S" (Index) only
fivenum(APLs[APLs$abb_s_index==1,]$samplemonth, na.rm = T)

# Group 2: True Abbott-S (AU) only
fivenum(APLs[is.na(APLs$abbott_n) & APLs$abb_s_AU==1,]$samplemonth, na.rm = T)

# Group 3: True Abbott-S (AU) and Abbott-N?
fivenum(APLs[!is.na(APLs$abbott_n) & APLs$abb_s_AU==1,]$samplemonth, na.rm = T)

# Group 4: no available anti-S data, only Abbott-N
fivenum(APLs[!is.na(APLs$abbott_n) & is.na(APLs$abb_s_AU),]$samplemonth, na.rm = T)
```
**Notes**: So no matter what it really is it can't be Abbott-S-RBD and shall not be included in anti-S analysis. Updates on May 28th: Carmen replied and confirmed they are misplaced anti-N assay results.

#### 1.2 Move the misplaced anti-N back to where they are
```{r}
APLs$abbott_n[APLs$abb_s_index==1 &
              !is.na(APLs$abbott_s)]<-APLs$abbott_s[APLs$abb_s_index==1 & 
                                                   !is.na(APLs$abbott_s)]
APLs$abbott_s[APLs$abb_s_index==1 & !is.na(APLs$abbott_s)]<-NA

# add anti-N interpretation
APLs$pos_abbott[APLs$abbott_n<1.4 & !is.na(APLs$abbott_n)]<-0
APLs$pos_abbott[APLs$abbott_n>=1.4 & !is.na(APLs$abbott_n)]<-1

# redo the anti-S interpretation
APLs$pos_abbott_s<-rep(NA,214780)
APLs$pos_abbott_s[APLs$abbott_s<50 & !is.na(APLs$abbott_s)]<-0
APLs$pos_abbott_s[APLs$abbott_s>=50 & !is.na(APLs$abbott_s)]<-1
table(APLs$pos_abbott_s, useNA = 'ifany')
```


## 2. Applying the COI 

#### 2.1 Apply COI to APL (Abbott-S) data
```{r}
APLs$pos_abbott_s2<-rep(NA, 214780)
APLs$pos_abbott_s2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                   APLs$abbott_s>=402.36 & !is.na(APLs$abbott_s)]<-"Positive"
APLs$pos_abbott_s2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                     APLs$abbott_s<402.36 & !is.na(APLs$abbott_s)]<-"Negative"
table(APLs$pos_abbott_s2, useNA = 'ifany')

table(APLs$pos_abbott_s, APLs$pos_abbott_s2, useNA = 'ifany')
```
### Apply COI to CBS (Roche-S) data
```{r}
CBSs$pos_roche_s<-CBS$interp_roche_s
CBSs_AB<-CBSs[CBSs$province=="AB",]

# CBS used Roche-S, one ob has missing values
table(is.na(CBSs_AB$roche_s))

# Roche COI: 0.8 & 178.81
CBSs_AB$pos_roche_s2<-rep(NA, 124008)
CBSs_AB$pos_roche_s2[CBSs_AB$roche_s>=178.81 & !is.na(CBSs_AB$roche_s)]<-1
CBSs_AB$pos_roche_s2[CBSs_AB$roche_s< 178.81 & !is.na(CBSs_AB$roche_s)]<-0
table(CBSs_AB$pos_roche_s2, useNA = 'ifany')

# Comparison btw COI 0.8 & 178.81
table(CBSs_AB$pos_roche_s, CBSs_AB$pos_roche_s2, useNA = 'ifany')
```
**Notes:** After increasing the COI from 0.8 to 178.81, 6732 of 108,514 (6.20%) samples were re-categorized as negative. The gap is smaller than what we observed in APL data, which has gaps of around 10%.

#### 2.2 Roche-S <--> Abbott-S transformation

#### 2.2.1 Apply Transformation
```{r}
# Abbott-S = 82.5 + 15.54*Roche-S
# Source: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8552734/

# APL
APLs$roche_st<-(APLs$abbott_s-82.5)/15.54
summary(APLs$roche_st)

## add positivity, COI=0.8
APLs$pos_roche_st<-rep(NA, 214780)
APLs$pos_roche_st[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                   APLs$roche_st>=0.8 & !is.na(APLs$roche_st)]<-1
APLs$pos_roche_st[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                     APLs$roche_st<0.8 & !is.na(APLs$roche_st)]<-0
table(APLs$pos_roche_st, useNA = 'ifany')

## add immunity, COI = 178.81
APLs$pos_roche_st2<-rep(NA, 214780)
APLs$pos_roche_st2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                   APLs$roche_st>=178.81 & !is.na(APLs$roche_st)]<-1
APLs$pos_roche_st2[APLs$abb_s_AU==1 & !is.na(APLs$abb_s_AU) &
                     APLs$roche_st<178.81 & !is.na(APLs$roche_st)]<-0
table(APLs$pos_roche_st, APLs$pos_roche_st2, useNA = 'ifany')
```
```{r}
# CBS
CBSs_AB$abbott_st<-82.5+CBSs_AB$roche_s*15.54
summary(CBSs_AB$abbott_st)

## add positivity, COI=50, all positive (COI lower than min after transformation)
CBSs_AB$pos_abbott_st<-rep(NA, 124008)
CBSs_AB$pos_abbott_st[CBSs_AB$abbott_st>=50 & !is.na(CBSs_AB$abbott_st)]<-1
CBSs_AB$pos_abbott_st[CBSs_AB$abbott_st<50 & !is.na(CBSs_AB$abbott_st)]<-0
table(CBSs_AB$pos_abbott_st, useNA = 'ifany')

## add immunity, COI = 178.81
CBSs_AB$pos_abbott_st2<-rep(NA, 124008)
CBSs_AB$pos_abbott_st2[CBSs_AB$abbott_st>=402.36 & !is.na(CBSs_AB$abbott_st)]<-1
CBSs_AB$pos_abbott_st2[CBSs_AB$abbott_st<402.36 & !is.na(CBSs_AB$abbott_st)]<-0
table(CBSs_AB$pos_abbott_st, CBSs_AB$pos_abbott_st2, useNA = 'ifany')
```
#### 2.2.2 Creating merged dta
```{r}
tb_abbst<-APLs %>%
  .[.$abb_s_AU==1,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_roche_st= sum(pos_roche_st, na.rm = T), 
            pos_roche_st2= sum(pos_roche_st2, na.rm = T)
            )
tb_abbst$prop.rost1<-tb_abbst$pos_roche_st/tb_abbst$n
tb_abbst$prop.rost2<-tb_abbst$pos_roche_st2/tb_abbst$n

# merge abbs & abbst table
tb_abbs<-merge(tb_abbs, select(tb_abbst, -c(2:4)), all=T, by="samplemonth")

# clean NAs
tb_abbs<-tb_abbs[!is.na(tb_abbs$samplemonth),]

tb_melt_t1<-reshape2::melt(select(tb_abbs, samplemonth, prop.abbs1, prop.rost1, study), 
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")

tb_melt_t2<-reshape2::melt(select(tb_abbs, samplemonth, prop.abbs2, prop.rost2, study), 
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
```

```{r}
tb_rost<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_st= sum(pos_abbott_st, na.rm = T), 
            pos_abbott_st2= sum(pos_abbott_st2, na.rm = T)
            )
tb_rost$prop.abbst1<-tb_rost$pos_abbott_st/tb_rost$n
tb_rost$prop.abbst2<-tb_rost$pos_abbott_st2/tb_rost$n

# merge abbs & abbst table
tb_ros<-merge(tb_ros, select(tb_rost, -c(2:4)), all=T, by="samplemonth")

# clean NAs
tb_ros<-tb_ros[!is.na(tb_ros$samplemonth),]

tb_melt_t3<-reshape2::melt(select(tb_ros, samplemonth, prop.ros1, prop.abbst1, study),
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
tb_melt_t4<-reshape2::melt(select(tb_ros, samplemonth, prop.ros2, prop.abbst2, study),
                        id.vars = c("samplemonth", "study"),
                        variable.name = "COI",
                        value.name = "prop")
```

## 3. Making the Plot

## 3.1.1 Prepare the melt data: APL
```{r}
# recode pos/neg
APLs$pos_abbott_s[APLs$pos_abbott_s=="Positive"]<-1
APLs$pos_abbott_s[APLs$pos_abbott_s=="Negative"]<-0
APLs$pos_abbott_s<-as.numeric(APLs$pos_abbott_s)
APLs$pos_abbott_s2[APLs$pos_abbott_s2=="Positive"]<-1
APLs$pos_abbott_s2[APLs$pos_abbott_s2=="Negative"]<-0
APLs$pos_abbott_s2<-as.numeric(APLs$pos_abbott_s2)

tb_abbs<-APLs %>%
  .[.$abb_s_AU==1,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbs$prop.abbs1<-tb_abbs$pos_abbott_s/tb_abbs$n
tb_abbs$prop.abbs2<-tb_abbs$pos_abbott_s2/tb_abbs$n

# clean NAs
tb_abbs<-tb_abbs[!is.na(tb_abbs$samplemonth),]

tb_abbs_melt<-reshape2::melt(select(tb_abbs, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

## 3.1.2 Prepare the melt data: CBS
```{r}
tb_ros<-CBSs_AB %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_roche_s= sum(pos_roche_s, na.rm = T), 
            pos_roche_s2= sum(pos_roche_s2, na.rm = T)
            )
tb_ros$prop.ros1<-tb_ros$pos_roche_s/tb_ros$n
tb_ros$prop.ros2<-tb_ros$pos_roche_s2/tb_ros$n

tb_ros_melt<-reshape2::melt(select(tb_ros, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```


## 3.2 Making the Plot

#### 3.2.1 Making the plot seperately for CBS & APL
```{r}
# APL
p09<-tb_abbs_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(colour=COI))  +
  theme_bw() 
p09

# CBS
p09b<-tb_ros_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(aes(colour=COI)) +
  geom_line(aes(colour=COI))  +
  theme_bw() 
p09b
```
#### 3.2.2 Making APL & CBS in one plot
```{r}
# creating merged summary tab
tb_abbs_melt$study<-rep("APL", length(tb_abbs_melt$samplemonth))
tb_ros_melt$study<-rep("CBS", length(tb_ros_melt$samplemonth))

tb_APLCBS2<-rbind.data.frame(tb_abbs_melt, tb_ros_melt)

tb_APLCBS2$COI<-as.character(tb_APLCBS2$COI)
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.abbs1"]<-"50"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.abbs2"]<-"402.36"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.ros1"]<-"0.8"
tb_APLCBS2$COI[tb_APLCBS2$COI=="prop.ros2"]<-"178.81"

tb_APLCBS2$COI_ty[tb_APLCBS2$COI %in% c("50", "0.8")]<-"Positivity"
tb_APLCBS2$COI_ty[tb_APLCBS2$COI %in% c("402.36", "178.81")]<-"Immunity"
```

```{r}
# ggplot
p09.lab<-c("APL-Abbott (COI=402)", "CBS-Roche (COI=179)", 
           "APL-Abbott (COI=50)", "CBS-Roche (COI=0.8)")
p09c<-tb_APLCBS2 %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09.lab)+
  scale_linetype_manual("", values=c(3,3,1,1), labels = p09.lab) 
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09c
```
#### 3.2.3 Plot for transformed curved
```{r}
# Plot 1
p09d.dta<-rbind.data.frame(tb_melt_t1, tb_melt_t3)

p09d.dta$COI<-as.character(p09d.dta$COI)
p09d.dta$COI_ty[p09d.dta$COI %in% c("prop.abbs1", "prop.ros1")]<-"Raw"
p09d.dta$COI_ty[p09d.dta$COI %in% c("prop.abbst1", "prop.rost1")]<-"Transformed"

p09d.lab<-c("APL-Abbott (COI=50)", "CBS-Roche (COI=0.8)", 
           "APL-Roche (COI=0.8)", "CBS-Abbott (COI=50)")
p09d<-p09d.dta %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09d.lab)+
  scale_linetype_manual("", values=c(1,1,3,3), labels = p09d.lab) 
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09d
```

```{r}
# Plot 2
p09e.dta<-rbind.data.frame(tb_melt_t2, tb_melt_t4)

p09e.dta$COI<-as.character(p09e.dta$COI)
p09e.dta$COI_ty[p09e.dta$COI %in% c("prop.abbs2", "prop.ros2")]<-"Raw"
p09e.dta$COI_ty[p09e.dta$COI %in% c("prop.abbst2", "prop.rost2")]<-"Transformed"

p09e.lab<-c("APL-Abbott (COI=402)", "CBS-Roche (COI=179)", 
           "APL-Roche (COI=179)", "CBS-Abbott (COI=402)")
p09e<-p09e.dta %>%
  ggplot(aes(x=samplemonth, y=prop, colour=interaction(study, COI_ty),
                                    linetype=interaction(study, COI_ty))) +
  geom_point() +
  geom_line()  +
  theme_bw() +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_colour_manual("", values = c("red", "blue", "red", "blue"),
                      labels = p09e.lab)+
  scale_linetype_manual("", values=c(1,1,3,3), labels = p09e.lab) 
#  theme(legend.position="top")+
#  guides(color = guide_legend(nrow = 2))

p09e
```
## 4 Misc Analysis

#### 4.1 Sensitivity Analysis
```{r}
# Add vax variable
APLs<-merge(APLs, select(RFD4682_e, order_ID, VACCINATION_STATUS),
      by="order_ID", all=T)

APLs$vax<-APLs$VACCINATION_STATUS
APLs<-select(APLs, -c("VACCINATION_STATUS"))
table(APLs$vax, useNA = 'ifany')

# Add days since imm (vax)
APLs<-merge(APLs, select(RFD4682_e, order_ID, DAYS_SINCE_IMM),
      by="order_ID", all=T)
```
**Notes:** In this part we also do the analysis for those got vaccinated >=28 days, however it does not change the shape of the lines so much. So we just group by doses (0/>=1).

```{r}
# re-do the melt data: no vax
tb_abbsv0<-APLs %>%
  .[.$abb_s_AU==1 & (.$vax %in% c("Not Immunized", "Pre-Immunization")),] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsv0$prop.abbs1<-tb_abbsv0$pos_abbott_s/tb_abbsv0$n
tb_abbsv0$prop.abbs2<-tb_abbsv0$pos_abbott_s2/tb_abbsv0$n

# clean NAs
tb_abbsv0<-tb_abbsv0[!is.na(tb_abbsv0$samplemonth),]

tb_abbsv0_melt<-reshape2::melt(select(tb_abbsv0, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")

# re-do the melt data: at least 1 dose
tb_abbsv1<-APLs %>%
  .[.$abb_s_AU==1 & .$vax %in% c("1 Dose","1-2 Doses","2 Doses","3 Doses",
                             "4 Doses") ,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            pos_abbott_s= sum(pos_abbott_s, na.rm = T), 
            pos_abbott_s2= sum(pos_abbott_s2, na.rm = T)
            )
tb_abbsv1$prop.abbs1<-tb_abbsv1$pos_abbott_s/tb_abbsv1$n
tb_abbsv1$prop.abbs2<-tb_abbsv1$pos_abbott_s2/tb_abbsv1$n

# clean NAs
tb_abbsv1<-tb_abbsv1[!is.na(tb_abbsv1$samplemonth),]

tb_abbsv1_melt<-reshape2::melt(select(tb_abbsv1, -c(2:4)), 
                        id.vars = c("samplemonth"),
                        variable.name = "COI",
                        value.name = "prop")
```

```{r}
# re-do the plot
# APL: not vaccinated
p09v0<-tb_abbsv0_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="red") +
  geom_line(aes(linetype=COI), colour="red")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top') + 
  ggtitle("Stratum: not vaccinated")
p09v0
```
```{r}
# Plot: at least 1 dose
p09v1<-tb_abbsv1_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=COI, colour=COI)) +
  geom_point(colour="red") +
  geom_line(aes(linetype=COI), colour="red")  +
  theme_bw() + 
  ylim(c(0,1)) +
  xlab("Time of Sample Collection") + 
  ylab("Proportion")+ 
  scale_linetype_manual("", values=c(1,3), labels = c("APL-Abbott (COI=50)", 
                                                      "APL-Abbott (COI=402)"))+
  theme(legend.position='top')+
  ggtitle("Stratum: at least 1 dose")
p09v1
```
#### Figure panel
```{r}
# use cowplot package
p09all.upper<-cowplot::plot_grid(p09c + ylab("Proportion") +
                           theme(legend.position='top') +
                           guides(color = guide_legend(nrow = 2)), 
                           p09v0 + xlab ("") + ylab(""), nrow=1,
                           labels = c("A", "B"),  align = "h")
p09all.upper

p09all.lower<-cowplot::plot_grid(
                           NULL,  p09v1 + theme(legend.position="none"), nrow=1,
                           labels = c("", "C"))
p09all.lower


png(file="../4_output/figs/Fig.4 Immunity.png", 
    width=2400, height=2000, res=300)
cowplot::plot_grid(p09all.upper, p09all.lower, nrow=2, rel_heights = c(1, 0.8))
dev.off()
```


## 4.2 The vaccination rate among APL
The APL data Carmen shared with us has vaccination info, the 2024 Jan ver of it even has the vax brand. While the CBS data we have doesnot include vax info. However, a paper written by Sheila has the vax% of those in CBS data, which we can use for comparison on vax%.

#### 4.2.1 Vax rate by APL vax data
```{r}
# create vax% cat var
APLs$vax_cat<-rep(NA, 214780)
APLs$vax_cat[APLs$vax %in% c("1 Dose","1-2 Doses","2 Doses","3 Doses",
                             "4 Doses")]<-1
APLs$vax_cat[APLs$vax %in% c("Not Immunized", "Pre-Immunization")]<-0
table(APLs$vax, APLs$vax_cat, useNA = 'ifany')
```
```{r}
# create merged data
tb_vax<-APLs %>%
  .[.$abb_s_AU==1,] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_vax= sum(vax_cat, na.rm = T)
            )
tb_vax$prop.vax<-tb_vax$n_vax/tb_vax$n

# clean NAs
tb_vax<-tb_vax[!is.na(tb_vax$samplemonth),]

# make the plot
p10<-tb_vax %>%
  ggplot(aes(x=samplemonth, y=prop.vax)) +
  geom_point() +
  geom_line()  +
  geom_smooth(colour="red") +
  theme_bw() + 
  ylim(c(0,1)) +
  ylab("Vaccinated%")
p10
```
**Alton's comments:** "It might be worth comparing to reported vax rate for Alberta similar to what Sheila and Steve did in that figure." As they used (S+ N-)% to estimate the vax%, it will inevitably results in underestimation, as those who are vaccinated and infected was not counted.

#### 4.2.2 Vax by anti-S and anti-N
```{r}
# create an addition indicator for S+ and N-
table(APLs$pos_abbott, APLs$pos_abbott_s, useNA = 'ifany')

APLs$vax_est<-rep(0, 214780)
APLs$vax_est[APLs$pos_abbott==0 & APLs$pos_abbott_s==1]<-1
APLs$vax_est[is.na(APLs$pos_abbott) | is.na(APLs$pos_abbott_s)]<-NA
table(APLs$vax_est)
```
```{r}
tb_vax_est<-APLs %>%
#  .[!is.na(.$pos_abbott_s) & !is.na(.$pos_abbott),] %>%
  group_by(samplemonth) %>%
  summarise(n = n() , 
            n_vax= sum(vax_est, na.rm = T)
            )
tb_vax_est$prop.vax<-tb_vax_est$n_vax/tb_vax_est$n

# clean NAs
tb_vax_est<-tb_vax_est[!is.na(tb_vax_est$samplemonth),]

# make the plot
p11<-tb_vax_est %>%
  ggplot(aes(x=samplemonth, y=prop.vax)) +
  geom_point() +
  geom_line()  +
  geom_smooth(colour="red") +
  theme_bw() + 
  ylim(c(0,1)) +
  ylab("Vaccinated% Est by anti-S&N")
p11
```
**Notes:** Estimating the vax% using the anti-S (+) and anti-N (-) assay results. For our analysis, this way of estimation might be problematic. We don't have pre-Omicron wave anti-N data in APL  and the prevalence of ever infected (S+ & N+) raised sharply in 2022. This will result underestimated vax% in 2022, as presented in the fig above.

#### 4.3.3 The Vax rate in AB general population
```{r}
# load the data from Canada Statistics
vax_AB<-read.csv("https://health-infobase.canada.ca/src/data/covidLive/vaccination-coverage-map.csv")

# create AB subset and clean the data
vax_AB<-vax_AB[vax_AB$prename=="Alberta",]
vax_ABs<-vax_AB %>%
  select(week_end, numtotal_atleast1dose, proptotal_atleast1dose)
colnames(vax_ABs)<-c("weekend", "num.1dose", "prop.1dose")
vax_ABs$weekend<-as.yearmon(vax_ABs$weekend)

# calculate monthly mean prop for vax rate
tb_vax_AB<-vax_ABs %>%
  group_by(weekend) %>%
  summarise(ave.1dose = mean(prop.1dose))

tb_vax_AB<-tb_vax_AB[!is.na(tb_vax_AB$ave.1dose),]
tb_vax_AB$data<-rep("AB_general", length(tb_vax_AB$weekend))

d01<-tb_vax_AB
colnames(d01)<-c("samplemonth", "prop.vax", "data")
```

##### creating a merged data
```{r}
# Estimated vaccination rate: by anti-S + and anti-N neg
View(tb_vax_est)
d02<-select(tb_vax_est, c(1,4))
d02$data<-rep("S_pos_N_Neg", length(d02$samplemonth))

# Estimated vaccination rate: by anti-S only
View(tb_abbs)
d03<-select(tb_abbs, samplemonth, prop.abbs1, study)
colnames(d03)<-c("samplemonth", "prop.vax", "data")
d03$data<-rep("S_pos", length(d03$samplemonth))

# Reported vax rate in APL
View(tb_vax)
d04<-select(tb_vax, c(1,4))
d04$data<-rep("APL_vax", length(d04$samplemonth))

# merge all
dta.vax<-rbind.data.frame(d01, d02, d03, d04)
rm(d01, d02, d03, d04)

dta.vax$prop.vax[dta.vax$data=="AB_general"]<-dta.vax$prop.vax[dta.vax$data=="AB_general"]/100
```

##### Making the plot
```{r}
p12<-dta.vax %>%
  ggplot(aes(x=samplemonth, y=prop.vax, group=data, colour=data)) +
  geom_point(aes(colour=data)) +
  geom_line(aes(colour=data))  +
  theme_bw() + 
  ylim(c(0,1)) +
  ylab("Vaccinated%")
p12
```

