---
title: "2.2.a Preprocessing and Monthly Positivity Figures"
format: html
editor: visual
author: J.Chen (let me know if you run into any troubles with those codes)
---

## Quarto

This qmd file is to share the code of CBS data cleaning and monthly test positivity figures with Y.Yu, who will apply Bayesian models to adjust for waning sensitivity and specificity.

For APL
For Canpath cleaning & pre-processing, please refer to "2.1.1 Canpath Data.qmd"

## Running Code

## Load dataset

```{r}
# The CBS Data, extracted using "CITF_CBS_desc_stats.Rmd"
load(file = "../1_data/private/CBS.RData")
# Notes: Access to CBS data got denied, ask Amen for access. Y.Yuan has confirmed on 21-Feb-2024 the ver 2023-11-30 of CBS is still the most up-to-date ver.

# APL Data - will be updated soon
 
# Canpath data - will be updated soon
```

## Load necessary paks

```{r}
library(dplyr)         # Data management
library(reshape2)      # for melt() function
library(ggplot2)       # ggplot
library(zoo)           # for year-month format
```

## Load dataset

```{r}
# CBS
load(file = "../1_data/private/CBS.RData")

# Canpath - clean ver
load(file = "../1_data/private/CANPATH/Canpaths.RData")
# load from jmy foler
# load(file = "~/../../jmy/CANPATH/Canpaths.RData")
```

##==================== Part I. Preprocessing Data ============================##

#### 1.1 CBS data

```{r}
# CBS data is clean, no need for preprocessing

# Add region variable for CBS
table(CBS$province)

# 12 provinces, re-catgorized into six regions
# region divided according to Yuan's study. In CBS data since the number of samples from QC and North prov are too small (N=13, 85+83). We decided to exclude samples from those three prov from analysis.
# Also, since APL provides AB data only, we will divide prairie prov into AB and SK+MB. This should apply to Canpath data as well.

CBS$region<-rep(NA, length(CBS$pid))
CBS$region[CBS$province %in% c("NL", "PE", "NS", "NB")]<-"Atlantic"
CBS$region[CBS$province %in% c("ON")]<-"Ontario"
CBS$region[CBS$province %in% c("AB")]<-"Alberta"
CBS$region[CBS$province %in% c("MB", "SK")]<-"SK & MB"
CBS$region[CBS$province %in% c("BC")]<-"BC"

# In this way, QC, NU/NT, and YT will be coded as 'NA'
table(CBS$province, CBS$region, useNA = 'ifany')

# Creat sampling months (need {zoo} pak)
CBS$samplemonth<-as.yearmon(CBS$sampledate)
table(CBS$samplemonth, useNA = 'ifany')
```

#### 1.2 APL data

```{r}
# APL data needs additional cleaning, will update this part soon!
```

#### 1.3 Canpath data

**Notes:** In Canpath data we've removed three individuals who provided multiple samples, and several samples tested for multiple times. Those samples tested for multiple times did not result in inconsistent interpretation on assay results. See "2.1.1 Canpath Date.Rmd" for more details on data cleaning. 

In Canpath data all rid (researcherID, participant ID) and sid (sample ID) are unique and 1-to-1, though some sid is missing.

##==================== Part II. Test Positivity & RG =========================##

#### 2.1 CBS data

```{r}
# prepare melt data
tb1<-CBS%>%
  group_by(samplemonth, region, .add=TRUE) %>%
  summarise(n = n(), )

tb2<-CBS[CBS$interp_roche_n==1,] %>%
  group_by(samplemonth, region, .add=TRUE) %>%
  summarise(n.pos = n(), )

tb3<-merge(tb1, tb2, by = c("samplemonth", "region"), all.x = T, all.y = F)
tb3$prop.n<-tb3$n.pos/tb3$n
CBS_pr<-tb3[!is.na(tb3$region),]

# Add R-G adjusted prevalances
# Sen=99.8%, Spec = 99.5%
# Source:https://www.rochecanada.com/media/covid-19--an-additional-contribution-to-the-testing-landscape-in
# tb1$prop.n_RG_h<- (tb1$prop.n+0.995-1)/(0.995+0.998-1)

# Third-party sens & spec
# Sen=97.2%, spec = 99.8% 
# Source: https://assets.publishing.service.gov.uk/media/5f05887ad3bf7f2be6e02161/Evaluation__of_sensitivity_and_specificity_of_4_commercially_available_SARS-CoV-2_antibody_immunoassays.pdf
CBS_pr$prop.n_RG<- (CBS_pr$prop.n+0.998-1)/(0.998+0.972-1)

## According to Yuan's request, add sens & spec to all the obs
CBS_pr$sens<-rep(0.972, length(CBS_pr$samplemonth))
CBS_pr$spec<-rep(0.998, length(CBS_pr$samplemonth))
CBS_pr$data<-rep("CBS", length(CBS_pr$samplemonth))

## drop useless intermediate tables
rm(tb1, tb2, tb3)
```

We only applied the sens & spec from third-party studies, instead of the numbers published online by Roche.

#### 2.2 APL data

**Notes:** Seroprevalence estimation requires individual analysis and a little bit weighting. Those who has been sampled multiple times should be down-weighted properly. Those who are sampled multiple times in different months will not be down-weighted.

```{r}

```

#### 2.3 Canpath data

**Notes:** In Canpath data we don't have to worry about weighting, as one people has been sampled only once, then tested by multiple asays (either Gingras x3 or Abbott x2)

##### 2.3.1 Pre-process Canpath data
```{r}
Canpaths %>%
  select(region, assay_id) %>%
  group_by(region, assay_id) %>%
  summarise(Freq=n())

# remove 9 AB cases with Gingras abti-N (Mount Sinai Hosp)
Canpaths<-Canpaths %>%
  .[!(.$region=="Alberta" & .$assay_id=="10010-00"),]

# remove 2 BC cases with Abbott anti-N
Canpaths<-Canpaths %>%
  .[!(.$region=="BC" & .$assay_id=="20010-03"),]

# create samplemonth var
Canpaths$samplemonth<-as.yearmon(Canpaths$date_col)
table(Canpaths$samplemonth, useNA = 'ifany')

# see samplemonth by assay
Canpaths %>%
  .[!is.na(.$region),] %>%
  select(samplemonth, assay_id) %>%
  group_by(samplemonth, assay_id) %>%
  summarise(Freq=n())
```


```{r}
# create sero-prevalance tab
tb1<-Canpaths%>%
  group_by(samplemonth, region, .add=TRUE) %>%
  summarise(n = n(), )

tb2<-Canpaths[Canpaths$pos==1,] %>%
  group_by(samplemonth, region, .add=TRUE) %>%
  summarise(n.pos = n(), )

tb3<-merge(tb1, tb2, by = c("samplemonth", "region"), all.x = T, all.y = F)
tb3$prop.n<-tb3$n.pos/tb3$n
tb3$prop.n[is.na(tb3$prop.n)]<-0

Canpaths_pr<-tb3[!is.na(tb3$region) &
                 !is.na(tb3$samplemonth),]

# Third-party sens & spec: Abbott-N
# Sen=92.7%, spec = 99.9% 
# Source: https://assets.publishing.service.gov.uk/media/5f05887ad3bf7f2be6e02161/Evaluation__of_sensitivity_and_specificity_of_4_commercially_available_SARS-CoV-2_antibody_immunoassays.pdf
Canpaths_pr$prop.n_RG<-rep(NA, 38)
Canpaths_pr[Canpaths_pr$region=="Alberta",]$prop.n_RG<- 
  (Canpaths_pr[Canpaths_pr$region=="Alberta",]$prop.n+0.999-1)/(0.999+0.927-1)

# Third-party sens & spec: Mount Sinai Hosp (Gingras), from T.Murphy
# Sen=83.5%, spec = 96.4%
Canpaths_pr[!Canpaths_pr$region=="Alberta",]$prop.n_RG<- 
  (Canpaths_pr[!Canpaths_pr$region=="Alberta",]$prop.n+0.999-1)/(0.999+0.927-1)

## According to Yuan's request, add sens & spec to all the obs
Canpaths_pr$sens[Canpaths_pr$region=="Alberta"]<-0.927
Canpaths_pr$sens[!Canpaths_pr$region=="Alberta"]<-0.835
Canpaths_pr$spec[Canpaths_pr$region=="Alberta"]<-0.999
Canpaths_pr$spec[!Canpaths_pr$region=="Alberta"]<-0.964

Canpaths_pr$data<-rep("Canpaths", length(Canpaths_pr$samplemonth))

## drop useless intermediate tables
rm(tb1, tb2, tb3)
```

#### Merge all three into one

```{r}


# save all those data
save(CBS_pr, file="../3_intermediate/CBS_pr.RData" )
```

##==================== Part III. Figures =========================##

#### 3.1 CBS: Make plots by region

```{r}
# Reshape meltted data
CBS_melt<-reshape2::melt(select(CBS_pr, samplemonth, region,
                                       prop.n, prop.n_RG), 
                        id.vars = c("samplemonth", "region"),
                        variable.name = "Adj",
                        value.name = "prop")

p01<-CBS_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=Adj, colour=Adj)) +
  geom_point(aes(colour=Adj)) +
#  geom_smooth(method = "loess", aes(colour=Adj), se=FALSE) +
  geom_line(aes(colour=Adj))  + #non-smooth curve
  theme_bw() 

p01 + facet_wrap(~region)
```

#### 3.2 Canpath: make plots by region
```{r}
# Reshape meltted data
Canpaths_melt<-reshape2::melt(select(Canpaths_pr, samplemonth, region,
                                       prop.n, prop.n_RG), 
                        id.vars = c("samplemonth", "region"),
                        variable.name = "Adj",
                        value.name = "prop")

p02<-Canpaths_melt %>%
  ggplot(aes(x=samplemonth, y=prop, group=Adj, colour=Adj)) +
  geom_point(aes(colour=Adj)) +
#  geom_smooth(method = "loess", aes(colour=Adj), se=FALSE) +
  geom_line(aes(colour=Adj))  + 
  theme_bw()+
  scale_y_continuous(limits = c(0,1))

p02 + facet_wrap(~region)

```
