---
title: "2.2 Rogen-Gladen Adjustment"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

## Load dataset

```{r}
# The CBS Ab subset data
load(file = "../1_data/private/CBS_Ab.RData")
load(file = "../1_data/private/RFD4682e.RData")
```

## Load necc paks

```{r}
library(dplyr)         # Data management
library(reshape2)      # for melt() function
library(ggplot2)        # ggplot
library(zoo)           # year-month format
```

# ============= Part I. The Changing of Anti-N Pos APL ===============

#### Calculate positivity directly

```{r}
# Calculate positivity for each month
tb1<-RFD4682_e[is.na(RFD4682_e$`N-IgG_RESULT`)==F,] %>%
  group_by(Col_Month) %>%
  summarise(n = n())

tb2<-RFD4682_e[RFD4682_e$`N-IgG_INTERP`=="Positive",] %>%
  group_by(Col_Month) %>%
  summarise(n.pos = n())

tb1<-merge(tb1, tb2, by = "Col_Month", all.x = T, all.y = F)
tb1$prop.n<-tb1$n.pos/tb1$n
tb1$Col_Month<-as.yearmon(tb1$Col_Month)
tb1<-tb1[order(tb1$Col_Month),]

# Add R-G adjusted prevalances
# Sen=0.844, Spec = 1.0
# Source: 
tb1$prop.n_RG<- (tb1$prop.n+1-1)/(1+0.844-1)

# remove NAs
tb1<-tb1[!is.na(tb1$Col_Month),]

tb1 %>%
  with(plot(y=.$prop.n, x = .$Col_Month, type="b",
            ylab="positivity", xlab="Month",col="blue")
       )
```

#### Apply ggplot, plot two together

```{r}
APL_melt<-melt(select(tb1, Col_Month, prop.n, prop.n_RG), id.vars = "Col_Month")

APL_melt %>%
  ggplot(aes(x=Col_Month, y=value, colour=variable)) +
  geom_point(aes(colour=variable)) +
  geom_line(aes(colour=variable))  +
  theme_bw()
```

# ============= Part II. The Changing of Anti-N Pos Overtime ===============

#### Anti-N in CBS data (Roche)

```{r}
CBS_Ab %>%
  with(summary(roche_n))

hist(log10(CBS_Ab$roche_n))

table(CBS_Ab$interp_roche_n, useNA = 'ifany')
# 54713/(124008-1) = 44.12% much higher than APL

# Negative Cases: roche_n<1, clearly 1.0 is the COI, as it published by Roche
CBS_Ab %>%
  .[.$interp_roche_n==0, ] %>%
  with(summary(roche_n))

# Positive Cases: roche_n>=1
CBS_Ab %>%
  .[.$interp_roche_n==1, ] %>%
  with(summary(roche_n))
```

```{r}
# Check the data collection time

# Abbott only - not exist
CBS_Ab %>%
  .[!is.na(.$abbott_n) & is.na(.$roche_n), ] %>%
  with(summary(sampledate))

# Abbott & Roche
CBS_Ab %>%
  .[!is.na(.$abbott_n) & !is.na(.$roche_n), ] %>%
  with(summary(sampledate))

# Roche only
CBS_Ab %>%
  .[is.na(.$abbott_n) & !is.na(.$roche_n), ] %>%
  with(summary(sampledate))
```

## Making result table for ggplot

```{r}
# prepare melt data
tb1<-CBS_Ab%>%
  group_by(month_year) %>%
  summarise(n = n(), )

tb2<-CBS_Ab[CBS_Ab$interp_roche_n==1,] %>%
  group_by(month_year) %>%
  summarise(n.pos = n(), )

tb1<-merge(tb1, tb2, by = "month_year", all.x = T, all.y = F)
tb1$prop.n<-tb1$n.pos/tb1$n
tb1$month_year<-as.yearmon(tb1$month_year)
tb1<-tb1[order(tb1$month_year),]

# Add R-G adjusted prevalances
# Sen=99.8%, Spec = 99.5%
# Source:https://www.rochecanada.com/media/covid-19--an-additional-contribution-to-the-testing-landscape-in
tb1$prop.n_RG_h<- (tb1$prop.n+0.995-1)/(0.995+0.998-1)

# Third-party sens & spec
# Sen=90.6, spec = 100 
# Source: https://meridian.allenpress.com/aplm/article/145/1/32/443501/Comparative-Clinical-Evaluation-of-the-Roche
tb1$prop.n_RG_l<- (tb1$prop.n+1-1)/(1+0.906-1)
```

#### Apply ggplot, plot two together

```{r}
CBS_melt<-melt(select(tb1, month_year, prop.n, prop.n_RG_h, prop.n_RG_l), id.vars = "month_year")

CBS_melt %>%
  ggplot(aes(x=month_year, y=value, colour=variable)) +
  geom_point(aes(colour=variable)) +
  geom_line(aes(colour=variable))  +
  geom_hline(yintercept=0, colour='red', linetype=2) +
  theme_bw() + 
  scale_fill_discrete(name = "", labels = c("Unadjusted", "RG_adjusted: Roche", "RG_adjusted: Other study")) +
  theme(legend.title = element_blank())
```

#### Plot CBS and APL all together

```{r}
# Create a merged data
APL_melt$data<-rep("APL", length(APL_melt$Col_Month))
colnames(APL_melt)<-c("month_year", "variable", "value" , "data")

CBS_melt$data<-rep("CBS", length(CBS_melt$month_year))
# keep only RG_I (sens=0.9)
CBS_melt1<-CBS_melt %>% .[.$variable!="prop.n_RG_h",]
CBS_melt1$variable<-as.character(CBS_melt1$variable)
CBS_melt1$variable[CBS_melt1$variable!="prop.n"]<-'prop.n_RG'

APLBS<-rbind.data.frame(APL_melt, CBS_melt1)

# Do ggplot
p01<-APLBS %>%
  ggplot(aes(x=month_year, y=value, colour=variable)) +
  geom_point(aes(colour=variable, shape=data)) +
  geom_line(aes(colour=variable, linetype=data))  +
  geom_hline(yintercept=0, colour='red', linetype=2) +
  xlab("Time") + ylab("Estimated Prevalence") +
  theme_bw()

p01$labels$colour<-"Adjustment"

p01
```

## What's the reason of the gap?

-   assay difference (Roche-N vs Abbott-N), different waning--\>different scale of measurement: Roche\~18 months vs Abbott\~6 months

```{r}
# The gap between adjusted and unadjused - Rogen-Gladen equation is the cause
# In our case, the sensitivity is where most variance come from. Specificity is good over time, and we can used the number published by the manufacturer (Roche & Abbott). Since sens is imperfect (0.8--1.0) and specificity is mostly 100% trustworthy (~1.0), the R-G equation and be simplified as:

#     True Prevalence = Observed Test Positivity/sens
# According to the equation above, the worse the sens (smaller in value), the larger the gap between the adjusted (blue) and unadjusted (red). The gap is larger among unadjusted lines (red).

# Between data (APL, CBS, CANPATH) diff is not the major focus of this study, Yuan's paper will focus on those. For this paper, the major focus should be the difference between adjusting methods
```

##==================== Part III. Anti-S Positivity Overtime ================##

#### This time we will use anti-S only from the CBS data, since among-data diff is not the major focus of this project

```{r}
# Roche_s: like other Roche assay, COI = 0.4, those < 0.4 = negative and recorded as 0.4

# Histogram 
hist(CBS_Ab$roche_s[CBS_Ab$roche_s>0.4]) # extreme values
summary(CBS_Ab$roche_s) # This time they have 10,0000 as max, much larger than CLSA's 2500

# Histogram log-transformed
hist(CBS_Ab$log_roche_s[CBS_Ab$roche_s>0.4]) # Aman did log_e transform
summary(CBS_Ab$log_roche_s)

# Binary
table(CBS_Ab$interp_roche_s, useNA = 'ifany')
# Majority (87.50%) were test positive
```

#### Calculate Anti-S Positivity

```{r}
# prepare melt data
tb1<-CBS_Ab%>%
  group_by(month_year) %>%
  summarise(n = n(), )

tb2<-CBS_Ab[CBS_Ab$interp_roche_s==1,] %>%
  group_by(month_year) %>%
  summarise(s.pos = n(), )

tb1<-merge(tb1, tb2, by = "month_year", all.x = T, all.y = F)
tb1$prop.s<-tb1$s.pos/tb1$n
tb1$month_year<-as.yearmon(tb1$month_year)
tb1<-tb1[order(tb1$month_year),]

# Third-party sens & spec
# Sen=97.95, spec = 99.95 
# Source:https://www.sciencedirect.com/science/article/pii/S016609342100210X
tb1$prop.s_RG_l<- (tb1$prop.s+1-0.9995)/(1+0.9795-0.9995)

CBS_melt2<-melt(select(tb1, month_year, prop.s, prop.s_RG_l), id.vars = "month_year")

p02<-CBS_melt2 %>%
  ggplot(aes(x=month_year, y=value, colour=variable)) +
  geom_point(aes(colour=variable)) +
  geom_line(aes(colour=variable))  +
  geom_hline(yintercept=0, colour='red', linetype=2) +
  xlab("Time") + ylab("Estimated Prevalence") +
  theme_bw()

p02$labels$colour<-"Adjustment"
p02
```

#### Add additional COI 0.8 and 15

```{r}
CBS_Ab$interp_roche_s0.8<-if_else(CBS_Ab$roche_s>0.8, 1, 0)

# elevating COI from 0.4 to 0.8 only increase N(-) by 2

CBS_Ab$interp_roche_s15<-if_else(CBS_Ab$roche_s>15, 1, 0)
table(CBS_Ab$interp_roche_s15, useNA = 'ifany')

# elevating COI from 0.4 to 15 increase N(-) by 2000
```

#### Plot 03: 0.4 and 15 COI together in one single plot

```{r}
# Creating the N_prop data
tb1<-CBS_Ab%>%
  group_by(month_year) %>%
  summarise(n = n(), )

tb2<-CBS_Ab[CBS_Ab$interp_roche_s==1,] %>%
  group_by(month_year) %>%
  summarise(s.pos = n(), )

tb3<-CBS_Ab[CBS_Ab$interp_roche_s15==1,] %>%
  group_by(month_year) %>%
  summarise(s.pos15 = n(), )

tb1<-merge(tb1, tb2, by = "month_year", all.x = T, all.y = F)
tb1<-merge(tb1, tb3, by = "month_year", all.x = T, all.y = F)

tb1$prop.s<-tb1$s.pos/tb1$n
tb1$prop.s15<-tb1$s.pos15/tb1$n
tb1$month_year<-as.yearmon(tb1$month_year)
tb1<-tb1[order(tb1$month_year),]
```

```{r}
# Melt the data
CBS_melt3<-melt(select(tb1, month_year, prop.s, prop.s15), id.vars = "month_year")

p03<-CBS_melt3 %>%
  ggplot(aes(x=month_year, y=value, colour=variable)) +
  geom_point(aes(colour=variable)) +
  geom_line(aes(colour=variable))  +
  geom_hline(yintercept=0, colour='red', linetype=2) +
  xlab("Time") + ylab("Estimated Prevalence") +
  theme_bw()

p03$labels$colour<-"COI"
p03
```

#### Add RG-adjustment to the plot, using the sens and spec related to detection of virus neutrolization, rather than detection of presence of Antibodies.

```{r}
# N and proportions
tb1<-CBS_Ab%>%
  group_by(month_year) %>%
  summarise(n = n(), )

tb2<-CBS_Ab[CBS_Ab$interp_roche_s0.8==1,] %>%
  group_by(month_year) %>%
  summarise(s.pos0.8 = n(), )

tb3<-CBS_Ab[CBS_Ab$interp_roche_s15==1,] %>%
  group_by(month_year) %>%
  summarise(s.pos15 = n(), )

tb1<-merge(tb1, tb2, by = "month_year", all.x = T, all.y = F)
tb1<-merge(tb1, tb3, by = "month_year", all.x = T, all.y = F)

tb1$prop.s0.8<-tb1$s.pos0.8/tb1$n
tb1$prop.s15<-tb1$s.pos15/tb1$n
tb1$month_year<-as.yearmon(tb1$month_year)
tb1<-tb1[order(tb1$month_year),]
```

```{r}
# Add R-G adjusted props
# Source: https://diagnostics.roche.com/global/en/products/params/elecsys-anti-sars-cov-2-s.html
# Sample size is small, find a larger one?

tb1$prop.s0.8_RG<- (tb1$prop.s0.8+0.875-1)/(0.875+0.994-1)
tb1$prop.s15_RG<- (tb1$prop.s15+1-1)/(1+0.925-1)

# melt the data
CBS_melt4<-melt(select(tb1, month_year, prop.s0.8, prop.s15,
                       prop.s0.8_RG, prop.s15_RG), id.vars = "month_year")
CBS_melt4$adj[CBS_melt4$variable %in% c("prop.s0.8", "prop.s15")]<-"no adjustment"
CBS_melt4$adj[CBS_melt4$variable %in% c("prop.s0.8_RG", "prop.s15_RG")]<-"RG adjusted"
table(CBS_melt4$variable, CBS_melt4$adj)

CBS_melt4$COI[CBS_melt4$variable %in% c("prop.s0.8", "prop.s0.8_RG")]<-"0.8"
CBS_melt4$COI[CBS_melt4$variable %in% c("prop.s15", "prop.s15_RG")]<-"15"
table(CBS_melt4$variable, CBS_melt4$COI)
```

```{r}
## ggplot using melted data
p04<-CBS_melt4 %>%
  ggplot(aes(x=month_year, y=value, colour=adj)) +
  geom_point(aes(colour=adj, shape=COI)) +
  geom_line(aes(colour=adj, linetype=COI))  +
  geom_hline(yintercept=0, colour='red', linetype=2) +
  xlab("Time") + ylab("Estimated Prevalence") +
  theme_bw()

p04$labels$colour<-"Adjustment"

p04

# plot COI = 0.8/15 seperately
```
