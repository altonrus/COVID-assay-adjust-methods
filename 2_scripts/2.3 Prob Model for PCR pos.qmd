---
title: "2.3 Prob Model for PCR Positivity Estimation"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

The aim of this qmd file is providing an alternative way to monitor the severity of the outbreak. Besides of cumulative incidence in a certain time interval (like 3 months) we build a probabilistic model to estimate the prob of having a positive PCR test results in last three months. Those two are similar and we can use prob(inf. in past 3-month) to estimate the 3-month rolling incidence.

By calculating monthly average of the prob(PCR+ in past 3 months) we got an estimation in each month. By linking all those dots together we got a curve, suggesting the changing of severity of the pandemic overtime.

## Running Code

## Load packages
```{r}
library(dplyr)         # Data management
library(ggplot2)       # ggplot
library(zoo)           # year-month format
library(lmtest)        # for LR test, comparing models
#library(reshape2)     # for melt() function
library(readxl)        # for reading .xlsx data
library(nnet)          # for multinomial log regression
```

## Load dataset
```{r}
# The CBS Ab subset data
load(file = "../1_data/private/CBS_Ab.RData")
load(file = "../1_data/private/RFD4682e.RData")
```

## Dataset from previous studies for model building
```{r}
## Data-01:France Leon, for negative ref, use non-reactive samples before week 69 (Oct 2020)
library(readxl)
X1_pone <- read_excel("../1_data/private/Prob Model/1-pone.xlsx", 
    sheet = "ST1_Dataset", col_types = c("numeric", 
        "text", "numeric", "numeric", "numeric", 
        "numeric", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text"))
dta_01<-select(X1_pone, 1:7, 27)
dta_01s<-dta_01[dta_01$Result=="NonReac" &
                dta_01$`Donation type`!="Convalescent plasma" &
                dta_01$`Donation Week`<69,]

# keep only assay, age, sex
dta_01s<-select(dta_01s, 1,5,6,7)
colnames(dta_01s)<-c("roche_n", "pid", "age", "gender")
tb1<-as.data.frame(table(dta_01s$pid))
colnames(tb1)<-c("pid","freq")
tb1$sample_wt<-1/tb1$freq
dta_01s<-merge(dta_01s, select(tb1, 1,3), by="pid",all.x = T, all.y = F)

## add interp var and study ID
dta_01s$study<-rep(1, length(dta_01s$pid))
dta_01s$time_pso<-rep("never_inf", length(dta_01s$pid))
rm(tb1, tb2)
```

```{r}
## Data-03, pre-Covid negative ref only, from Jamaica (Carribean)
X3_mmc2 <- read_excel("../1_data/private/Prob Model/3-mmc2.xlsx", 
    range = "A2:M124", na = "NT")
dta_03<-select(X3_mmc2, 2,6)
dta_03$pid<-c(1:length(dta_03$`Elecsys Index Value`))
dta_03$study<-rep(3, length(dta_03$pid))
dta_03$time_pso<-rep("never_inf", length(dta_03$pid))

dta_03s<-dta_03[!(is.na(dta_03$`Elecsys Index Value`) &
                  is.na(dta_03$`Architect IgG Index Value`)),]

# add weights
dta_03s$sample_wt<-rep(1, length(dta_03s$pid))

# correct var names
colnames(dta_03s)<-c("roche_n", "abbott_n",
                     colnames(dta_03s[,3:6]))
```

```{r}
## Data-04, 2/8 months data PSO, extracted from Y. Nagakama et al.
X4_Nakagama_all <- read_excel("../1_data/private/Prob Model/4-Nakagama_all.xlsx")
dta_04<-X4_Nakagama_all 
dta_04$time_pso[dta_04$time_pso=="2 months"]<-"less_3_month"
dta_04$time_pso[dta_04$time_pso=="8 months"]<-"more_3_month"

# All participants been sampled twice, wt=0.5
dta_04$sample_wt<-rep(0.5, length(dta_04$pid))

# correct col names
colnames(dta_04)<-c("study", colnames(dta_04[,2:6]))
```

```{r}
## Data-06, shared by Dr Paul Bieniasz
X6_Paul <- read_excel("../1_data/private/Prob Model/6-2024_02_06_SR1407_McGill.xlsx", 
    sheet = "data_import", skip = 1)
dta_06<-select(X6_Paul, 1:6, 9)
colnames(dta_06)<-c("age", "gender", "pid", "time",
                    "abbott_n", "roche_n", "study")
dta_06s<-dta_06[!(is.na(dta_06$abbott_n) &
                  is.na(dta_06$roche_n)),]

# add time_pso based on time
dta_06s$time_pso[dta_06s$time<=90]<-"less_3_month"
dta_06s$time_pso[dta_06s$time> 90]<-"more_3_month"
table(dta_06s$time_pso, useNA = 'ifany')

# add weights
tb1<-as.data.frame(table(dta_06s$pid))
colnames(tb1)<-c("pid","freq")
tb1$sample_wt<-1/tb1$freq
dta_06s<-merge(dta_06s, select(tb1, 1,3), by="pid",all.x = T, all.y = F)
rm(tb1, tb2)

dta_06s<-select(dta_06s, -c("time"))
```

#### bind all those four data by rows
```{r}
dta_all<-dplyr::bind_rows(dta_01s, dta_03s, dta_04, dta_06s)
```


##============================ Part I. Probablistic Model ====================##

## Create a small subset for PCR+ data
```{r}
APL_PCR<-RFD4682_e %>%
  .[is.na(.$`N-IgG_RESULT`)==F & .$NAAT_STATUS %in% c("Negative","Positive"),]
APL_PCR$NAAT[APL_PCR$NAAT_STATUS=="Positive"]<-1
APL_PCR$NAAT[APL_PCR$NAAT_STATUS=="Negative"]<-0
APL_PCR$NAAT<-as.numeric(APL_PCR$NAAT)
table(APL_PCR$NAAT_STATUS, APL_PCR$NAAT, useNA = 'ifany')

# A subset for those who got results within 90 days
APL_PCR90<-APL_PCR %>%
  .[.$DAYS_SINCE_NAAT>=0 & .$DAYS_SINCE_NAAT<=90,]
```

## Build regression model using the data
```{r}
# Model 1: add age and sex as covariates, 90 days only
plm01<-glm(NAAT ~ AGE_AT_COLLECTION + GENDER  + N, data = APL_PCR90,
           family = binomial(link = "logit"))
summary(plm01)

# Model 2: add age and sex as covariates, everyone
plm02<-glm(NAAT ~ AGE_AT_COLLECTION + GENDER  + N, data = APL_PCR,
           family = binomial(link = "logit"))
summary(plm02)

# Model 3, add NAAT time into the model and compare it with model 2
plm03<-glm(NAAT ~ AGE_AT_COLLECTION + GENDER  + N + DAYS_SINCE_NAAT, data = APL_PCR,
           family = binomial(link = "logit"))
summary(plm03)

lrtest(plm02, plm03) # Sig difference, much lower AIC
```
Based on model 2 we can also add time since last PCR test into analysis, and it will improve AIC greatly for model fitting. However, this model is not applicable for other datasets as the PCR test info is missing.

```{r}
# Add predicted prob back to the data
APL_PCR90$NAAT_p<-predict(plm01, type = 'response')
hist(APL_PCR90$NAAT)

sum(APL_PCR90$NAAT)    # N=1008
sum(APL_PCR90$NAAT_p)  # N=1008
```

## Multinomial Regression Model:
```{r}
mnlm01<-multinom(relevel(as.factor(time_pso), ref = "never_inf") ~ roche_n, data = dta_all)
summary(mnlm01)

(summary(mnlm01))$coeffcients/summary(mnlm01)$standard.errors

# Model 02 takes sample weights into account
mnlm02<-multinom(relevel(as.factor(time_pso), ref = "never_inf") ~ roche_n, 
                 data = dta_all, weights = sample_wt)
summary(mnlm02)

(summary(mnlm01))$coeffcients/summary(mnlm01)$standard.errors
```


##====================== Part II. Applying the model to APL data =============##

Apply the APL_90 model to everyone in the dataset, then plot the difference btw those who has PCR test results (observed) and those who do not (predicted). 

Compared to model 1, model 2 is predicting  "ever predicted" rather than "infected in past three months" as it does in model 1. The only one we can apply to the APL data is the model 1.

#### 2.1 Prepare for the dataset
```{r}
#those tested within last 90 days
summary(APL_PCR90$DAYS_SINCE_NAAT) # Model 1 is built upon this dataset

# Add an indicator for those who had PCR test in past 90 days
RFD4682_e$PCR90<-rep(0, length(RFD4682_e$order_ID))
RFD4682_e$PCR90[RFD4682_e$order_ID %in% APL_PCR90$order_ID]<-1
table(RFD4682_e$PCR90)

# Clean the gender variable (level unknown)
table(RFD4682_e$GENDER)
APL_Clean<-RFD4682_e
APL_Clean$GENDER[APL_Clean$GENDER=="Unknown"]<-NA

# Recode NAAT as 0/1/9
APL_Clean$NAAT[APL_Clean$NAAT_STATUS=="Positive"]<-1
APL_Clean$NAAT[APL_Clean$NAAT_STATUS=="Negative"]<-0
APL_Clean$NAAT[APL_Clean$NAAT_STATUS=="No Prior NAT"]<-9
APL_Clean$NAAT<-as.numeric(APL_Clean$NAAT)
table(APL_Clean$NAAT_STATUS, APL_Clean$NAAT, useNA = 'ifany')

# Apply model 1 to APL data (full)
APL_Clean$NAAT_p<-predict(plm01, newdata = APL_Clean, type = 'response')

# Create NAAT_m, using real NAAT results for those tested <=90 days
APL_Clean$NAAT_m <- APL_Clean$NAAT_p
APL_Clean$NAAT_m[APL_Clean$PCR90==1 & APL_Clean$NAAT_STATUS=="Positive"]<-1
APL_Clean$NAAT_m[APL_Clean$PCR90==1 & APL_Clean$NAAT_STATUS=="Negative"]<-0
        
      
summary(APL_Clean$NAAT_m)
table(APL_Clean$NAAT_m==1) # number matches
table(APL_Clean$NAAT_m==0)
```

#### 2.2 Based on new data, making plot seperately

```{r}
# Calculate positivity for each month

# tb1-the data (PCR<90) used to build model
tb1<-APL_Clean[APL_Clean$PCR90==1,] %>%
  group_by(Col_Month) %>%
  summarise(n = n() , pos= mean(NAAT_m))
tb1$PCR90<-rep(1, length(tb1$Col_Month))

# tb2-we applied the model to the rest of APL (PCR>90) 
tb2<-APL_Clean[APL_Clean$PCR90==0,] %>%
  group_by(Col_Month) %>%
  summarise(n = n() , pos= mean(NAAT_m, na.rm=TRUE))
tb2$PCR90<-rep(0, length(tb2$Col_Month))

# Merge the data to take a look
tb3<-merge(tb1, tb2, by = "Col_Month", all.x = T, all.y = T)
tb3$Col_Month<-as.yearmon(tb3$Col_Month)
tb3<-tb3[order(tb3$Col_Month),]

# Compare the difference
# Paired t-test
t.test(tb3$pos.x[18:27], tb3$pos.y[18:27], paired=1)
# p-value=0.2761, no sig diff between observed (<90D) and the rest
```
#### The plots
```{r}
APL_Pmelt<-rbind.data.frame(select(tb1, Col_Month, pos, PCR90), 
                            select(tb2[18:27,], Col_Month, pos, PCR90))
APL_Pmelt$PCR90[APL_Pmelt$PCR90==0]<-"Predicted"
APL_Pmelt$PCR90[APL_Pmelt$PCR90==1]<-"Observed"

APL_Pmelt %>%
  ggplot(aes(x=Col_Month, y=pos, group=PCR90, colour=PCR90)) +
  geom_point() +
  geom_line()  +
  geom_hline(yintercept=0, colour='blue', linetype=2) +
  theme_bw() 
```



